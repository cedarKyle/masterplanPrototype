import { vec2, vec3 } from "gl-matrix";
import { ITreeNodeData } from "@shapediver/viewer.shared.node-tree";
import { IBox } from "@shapediver/viewer.shared.math";
export interface IAnchorDataImage {
    alt: string;
    height: number;
    hidden?: boolean;
    position?: {
        horizontal?: string;
        vertical?: string;
    };
    src: string;
    width: number;
}
export interface IAnchorDataText {
    color: string | number | vec3;
    hidden?: boolean;
    position?: {
        horizontal?: string;
        vertical?: string;
    };
    text: string;
    textAlign?: string;
}
export interface IHTMLElementAnchorData extends ITreeNodeData {
    data: IAnchorDataImage | IAnchorDataText | any;
    format: 'text' | 'image' | 'custom';
    hideable: boolean;
    intersectionTarget: IBox | string | string[] | undefined;
    location: vec3;
    viewports: string[];
    clone(): IHTMLElementAnchorData;
    create(properties: {
        anchor: IHTMLElementAnchorData;
        parent: HTMLDivElement;
    }): void;
    createViewerHtmlElement(viewer: string): HTMLDivElement | null;
    getViewerHtmlElement(viewer: string): HTMLDivElement | null;
    update(properties: {
        anchor: IHTMLElementAnchorData;
        htmlElement: HTMLDivElement;
        page: vec2;
        container: vec2;
        client: vec2;
        scale: vec2;
        hidden: boolean;
        visible: boolean;
    }): void;
}
//# sourceMappingURL=IHTMLElementAnchorData.d.ts.map