import { ITreeNode, ITreeNodeData } from "@shapediver/viewer.shared.node-tree";
import { IBox } from "@shapediver/viewer.shared.math";
import { IMaterialAbstractData } from "./material/IMaterialAbstractData";
import { mat4 } from "gl-matrix";
export declare enum PRIMITIVE_MODE {
    POINTS = 0,
    LINES = 1,
    LINE_LOOP = 2,
    LINE_STRIP = 3,
    TRIANGLES = 4,
    TRIANGLE_STRIP = 5,
    TRIANGLE_FAN = 6
}
export interface IAttributeData extends ITreeNodeData {
    readonly array: Int8Array | Uint8Array | Int16Array | Uint16Array | Uint32Array | Float32Array;
    readonly byteOffset: number;
    readonly byteStride?: number;
    readonly count: number;
    readonly elementBytes: number;
    readonly itemBytes: number;
    readonly itemSize: number;
    readonly max: number[];
    readonly min: number[];
    readonly morphAttributeData: IAttributeData[];
    readonly normalized: boolean;
    readonly sparse?: boolean;
    readonly sparseIndices?: Int8Array | Uint8Array | Int16Array | Uint16Array | Uint32Array | Float32Array;
    readonly sparseValues?: Int8Array | Uint8Array | Int16Array | Uint16Array | Uint32Array | Float32Array;
    clone(): IAttributeData;
}
export interface IPrimitiveData extends ITreeNodeData {
    readonly attributes: {
        [key: string]: IAttributeData;
    };
    readonly mode: PRIMITIVE_MODE;
    attributeMaterial: IMaterialAbstractData | null;
    boundingBox: IBox;
    effectMaterials: {
        material: IMaterialAbstractData;
        token: string;
    }[];
    indices: IAttributeData | null;
    material: IMaterialAbstractData | null;
    materialVariants: {
        material: IMaterialAbstractData;
        variant: number;
    }[];
    standardMaterial: IMaterialAbstractData | null;
    clone(): IPrimitiveData;
}
export interface IGeometryData extends ITreeNodeData {
    readonly matrix: mat4;
    readonly primitive: IPrimitiveData;
    boundingBox: IBox;
    morphWeights: number[];
    renderOrder: number;
    skinNode?: ITreeNode;
    clone(): IGeometryData;
}
//# sourceMappingURL=IGeometryData.d.ts.map