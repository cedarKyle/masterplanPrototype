import { IMapData } from "./IMapData";
import { IMaterialAbstractData, IMaterialAbstractDataProperties } from "./IMaterialAbstractData";
export interface IMaterialStandardDataProperties extends IMaterialAbstractDataProperties {
    attenuationColor?: string;
    attenuationDistance?: number;
    clearcoat?: number;
    clearcoatMap?: IMapData;
    clearcoatNormalMap?: IMapData;
    clearcoatRoughness?: number;
    clearcoatRoughnessMap?: IMapData;
    displacementBias?: number;
    displacementMap?: IMapData;
    displacementScale?: number;
    envMap?: string | string[];
    ior?: number;
    metalness?: number;
    metalnessMap?: IMapData;
    metalnessRoughnessMap?: IMapData;
    roughness?: number;
    roughnessMap?: IMapData;
    sheen?: number;
    sheenColor?: string;
    sheenColorMap?: IMapData;
    sheenRoughness?: number;
    sheenRoughnessMap?: IMapData;
    specularColor?: string;
    specularColorMap?: IMapData;
    specularIntensity?: number;
    specularIntensityMap?: IMapData;
    thickness?: number;
    thicknessMap?: IMapData;
    transmission?: number;
    transmissionMap?: IMapData;
}
export interface IMaterialStandardData extends IMaterialAbstractData {
    attenuationColor: string;
    attenuationDistance: number;
    clearcoat: number;
    clearcoatMap?: IMapData;
    clearcoatNormalMap?: IMapData;
    clearcoatRoughness: number;
    clearcoatRoughnessMap?: IMapData;
    displacementBias: number;
    displacementMap?: IMapData;
    displacementScale: number;
    envMap?: string | string[];
    ior: number;
    metalness: number;
    metalnessMap?: IMapData;
    metalnessRoughnessMap?: IMapData;
    roughness: number;
    roughnessMap?: IMapData;
    sheen: number;
    sheenColor: string;
    sheenColorMap?: IMapData;
    sheenRoughness: number;
    sheenRoughnessMap?: IMapData;
    specularColor: string;
    specularColorMap?: IMapData;
    specularIntensity: number;
    specularIntensityMap?: IMapData;
    thickness: number;
    thicknessMap?: IMapData;
    transmission: number;
    transmissionMap?: IMapData;
    clone(): IMaterialStandardData;
    copy(source: IMaterialStandardData): void;
}
//# sourceMappingURL=IMaterialStandardData.d.ts.map