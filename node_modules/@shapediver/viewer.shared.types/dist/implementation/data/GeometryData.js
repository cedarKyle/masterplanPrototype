"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _AttributeData_morphAttributeData, _AttributeData_array, _AttributeData_byteOffset, _AttributeData_byteStride, _AttributeData_count, _AttributeData_elementBytes, _AttributeData_itemBytes, _AttributeData_itemSize, _AttributeData_max, _AttributeData_min, _AttributeData_normalized, _AttributeData_sparse, _AttributeData_sparseIndices, _AttributeData_sparseValues, _PrimitiveData_attributes, _PrimitiveData_mode, _PrimitiveData_boundingBox, _PrimitiveData_indices, _PrimitiveData_material, _PrimitiveData_standardMaterial, _PrimitiveData_effectMaterials, _PrimitiveData_materialVariants, _PrimitiveData_attributeMaterial, _PrimitiveData_threeJsObject, _GeometryData_matrix, _GeometryData_primitive, _GeometryData_boundingBox, _GeometryData_renderOrder, _GeometryData_morphWeights, _GeometryData_skinNode, _GeometryData_threeJsObject;
Object.defineProperty(exports, "__esModule", { value: true });
exports.GeometryData = exports.PrimitiveData = exports.AttributeData = void 0;
const gl_matrix_1 = require("gl-matrix");
const viewer_shared_node_tree_1 = require("@shapediver/viewer.shared.node-tree");
const viewer_shared_math_1 = require("@shapediver/viewer.shared.math");
const IGeometryData_1 = require("../../interfaces/data/IGeometryData");
class AttributeData extends viewer_shared_node_tree_1.AbstractTreeNodeData {
    // #endregion Properties (13)
    // #region Constructors (1)
    /**
     * Creates an attribute data object.
     *
     * @param _array the array of the data
     * @param _itemSize the size
     * @param _hasOffset notifier if there is an offset
     * @param _offset the offset
     * @param _stride the stride
     * @param _normalized boolean if the data is normalized
     */
    constructor(array, itemSize, itemBytes, byteOffset, elementBytes, normalized, count, min = [], max = [], byteStride, sparse, sparseIndices, sparseValues, morphAttributeData = []) {
        super();
        // #region Properties (13)
        _AttributeData_morphAttributeData.set(this, []);
        _AttributeData_array.set(this, void 0);
        _AttributeData_byteOffset.set(this, void 0);
        _AttributeData_byteStride.set(this, void 0);
        _AttributeData_count.set(this, void 0);
        _AttributeData_elementBytes.set(this, void 0);
        _AttributeData_itemBytes.set(this, void 0);
        _AttributeData_itemSize.set(this, void 0);
        _AttributeData_max.set(this, []);
        _AttributeData_min.set(this, []);
        _AttributeData_normalized.set(this, void 0);
        _AttributeData_sparse.set(this, void 0);
        _AttributeData_sparseIndices.set(this, void 0);
        _AttributeData_sparseValues.set(this, void 0);
        __classPrivateFieldSet(this, _AttributeData_array, array, "f");
        __classPrivateFieldSet(this, _AttributeData_itemSize, itemSize, "f");
        __classPrivateFieldSet(this, _AttributeData_itemBytes, itemBytes, "f");
        __classPrivateFieldSet(this, _AttributeData_byteOffset, byteOffset, "f");
        __classPrivateFieldSet(this, _AttributeData_elementBytes, elementBytes, "f");
        __classPrivateFieldSet(this, _AttributeData_normalized, normalized, "f");
        __classPrivateFieldSet(this, _AttributeData_count, count, "f");
        __classPrivateFieldSet(this, _AttributeData_min, min, "f");
        __classPrivateFieldSet(this, _AttributeData_max, max, "f");
        __classPrivateFieldSet(this, _AttributeData_byteStride, byteStride, "f");
        __classPrivateFieldSet(this, _AttributeData_sparse, sparse, "f");
        __classPrivateFieldSet(this, _AttributeData_sparseIndices, sparseIndices, "f");
        __classPrivateFieldSet(this, _AttributeData_sparseValues, sparseValues, "f");
        __classPrivateFieldSet(this, _AttributeData_morphAttributeData, morphAttributeData, "f");
    }
    // #endregion Constructors (1)
    // #region Public Accessors (13)
    get array() {
        return __classPrivateFieldGet(this, _AttributeData_array, "f");
    }
    get byteOffset() {
        return __classPrivateFieldGet(this, _AttributeData_byteOffset, "f");
    }
    get byteStride() {
        return __classPrivateFieldGet(this, _AttributeData_byteStride, "f");
    }
    get count() {
        return __classPrivateFieldGet(this, _AttributeData_count, "f");
    }
    get elementBytes() {
        return __classPrivateFieldGet(this, _AttributeData_elementBytes, "f");
    }
    get itemBytes() {
        return __classPrivateFieldGet(this, _AttributeData_itemBytes, "f");
    }
    get itemSize() {
        return __classPrivateFieldGet(this, _AttributeData_itemSize, "f");
    }
    get max() {
        return __classPrivateFieldGet(this, _AttributeData_max, "f");
    }
    get min() {
        return __classPrivateFieldGet(this, _AttributeData_min, "f");
    }
    get morphAttributeData() {
        return __classPrivateFieldGet(this, _AttributeData_morphAttributeData, "f");
    }
    get normalized() {
        return __classPrivateFieldGet(this, _AttributeData_normalized, "f");
    }
    get sparse() {
        return __classPrivateFieldGet(this, _AttributeData_sparse, "f");
    }
    get sparseIndices() {
        return __classPrivateFieldGet(this, _AttributeData_sparseIndices, "f");
    }
    get sparseValues() {
        return __classPrivateFieldGet(this, _AttributeData_sparseValues, "f");
    }
    // #endregion Public Accessors (13)
    // #region Public Methods (1)
    /**
     * Clones the attribute data.
     */
    clone() {
        let array = __classPrivateFieldGet(this, _AttributeData_array, "f").slice(0, __classPrivateFieldGet(this, _AttributeData_array, "f").length);
        array.set(__classPrivateFieldGet(this, _AttributeData_array, "f"));
        return new AttributeData(array, __classPrivateFieldGet(this, _AttributeData_itemSize, "f"), __classPrivateFieldGet(this, _AttributeData_itemBytes, "f"), __classPrivateFieldGet(this, _AttributeData_byteOffset, "f"), __classPrivateFieldGet(this, _AttributeData_elementBytes, "f"), __classPrivateFieldGet(this, _AttributeData_normalized, "f"), __classPrivateFieldGet(this, _AttributeData_count, "f"), __classPrivateFieldGet(this, _AttributeData_min, "f"), __classPrivateFieldGet(this, _AttributeData_max, "f"), __classPrivateFieldGet(this, _AttributeData_byteStride, "f"), __classPrivateFieldGet(this, _AttributeData_sparse, "f"), __classPrivateFieldGet(this, _AttributeData_sparseIndices, "f"), __classPrivateFieldGet(this, _AttributeData_sparseValues, "f"), __classPrivateFieldGet(this, _AttributeData_morphAttributeData, "f"));
    }
}
exports.AttributeData = AttributeData;
_AttributeData_morphAttributeData = new WeakMap(), _AttributeData_array = new WeakMap(), _AttributeData_byteOffset = new WeakMap(), _AttributeData_byteStride = new WeakMap(), _AttributeData_count = new WeakMap(), _AttributeData_elementBytes = new WeakMap(), _AttributeData_itemBytes = new WeakMap(), _AttributeData_itemSize = new WeakMap(), _AttributeData_max = new WeakMap(), _AttributeData_min = new WeakMap(), _AttributeData_normalized = new WeakMap(), _AttributeData_sparse = new WeakMap(), _AttributeData_sparseIndices = new WeakMap(), _AttributeData_sparseValues = new WeakMap();
class PrimitiveData extends viewer_shared_node_tree_1.AbstractTreeNodeData {
    // #endregion Properties (5)
    // #region Constructors (1)
    /**
     * Creates a primitive data object.
     *
     * @param _attributes the attributes as key-value pairs
     * @param _indices the indices
     */
    constructor(attributes = {}, mode = IGeometryData_1.PRIMITIVE_MODE.TRIANGLES, indices = null, material = null, attributeMaterial = null) {
        super();
        // #region Properties (5)
        _PrimitiveData_attributes.set(this, {});
        _PrimitiveData_mode.set(this, IGeometryData_1.PRIMITIVE_MODE.TRIANGLES);
        _PrimitiveData_boundingBox.set(this, new viewer_shared_math_1.Box());
        _PrimitiveData_indices.set(this, null);
        _PrimitiveData_material.set(this, null);
        _PrimitiveData_standardMaterial.set(this, null);
        _PrimitiveData_effectMaterials.set(this, []);
        _PrimitiveData_materialVariants.set(this, []);
        _PrimitiveData_attributeMaterial.set(this, null);
        _PrimitiveData_threeJsObject.set(this, {});
        __classPrivateFieldSet(this, _PrimitiveData_attributes, attributes, "f");
        __classPrivateFieldSet(this, _PrimitiveData_mode, mode, "f");
        __classPrivateFieldSet(this, _PrimitiveData_indices, indices, "f");
        __classPrivateFieldSet(this, _PrimitiveData_material, material, "f");
        __classPrivateFieldSet(this, _PrimitiveData_standardMaterial, material, "f");
        __classPrivateFieldSet(this, _PrimitiveData_attributeMaterial, attributeMaterial, "f");
        if (__classPrivateFieldGet(this, _PrimitiveData_attributes, "f")['POSITION']) {
            if (__classPrivateFieldGet(this, _PrimitiveData_attributes, "f")['POSITION'].min.length === 3 && __classPrivateFieldGet(this, _PrimitiveData_attributes, "f")['POSITION'].max.length === 3) {
                __classPrivateFieldSet(this, _PrimitiveData_boundingBox, new viewer_shared_math_1.Box(gl_matrix_1.vec3.fromValues(__classPrivateFieldGet(this, _PrimitiveData_attributes, "f")['POSITION'].min[0], __classPrivateFieldGet(this, _PrimitiveData_attributes, "f")['POSITION'].min[1], __classPrivateFieldGet(this, _PrimitiveData_attributes, "f")['POSITION'].min[2]), gl_matrix_1.vec3.fromValues(__classPrivateFieldGet(this, _PrimitiveData_attributes, "f")['POSITION'].max[0], __classPrivateFieldGet(this, _PrimitiveData_attributes, "f")['POSITION'].max[1], __classPrivateFieldGet(this, _PrimitiveData_attributes, "f")['POSITION'].max[2])), "f");
            }
            else {
                __classPrivateFieldGet(this, _PrimitiveData_boundingBox, "f").setFromAttributeArray(__classPrivateFieldGet(this, _PrimitiveData_attributes, "f")['POSITION'].array);
            }
        }
    }
    // #endregion Constructors (1)
    // #region Public Accessors (7)
    get attributes() {
        return __classPrivateFieldGet(this, _PrimitiveData_attributes, "f");
    }
    get boundingBox() {
        return __classPrivateFieldGet(this, _PrimitiveData_boundingBox, "f");
    }
    get indices() {
        return __classPrivateFieldGet(this, _PrimitiveData_indices, "f");
    }
    set indices(value) {
        __classPrivateFieldSet(this, _PrimitiveData_indices, value, "f");
    }
    get standardMaterial() {
        return __classPrivateFieldGet(this, _PrimitiveData_standardMaterial, "f");
    }
    set standardMaterial(value) {
        __classPrivateFieldSet(this, _PrimitiveData_standardMaterial, value, "f");
    }
    get material() {
        return __classPrivateFieldGet(this, _PrimitiveData_material, "f");
    }
    set material(value) {
        __classPrivateFieldSet(this, _PrimitiveData_material, value, "f");
    }
    get effectMaterials() {
        return __classPrivateFieldGet(this, _PrimitiveData_effectMaterials, "f");
    }
    get materialVariants() {
        return __classPrivateFieldGet(this, _PrimitiveData_materialVariants, "f");
    }
    get attributeMaterial() {
        return __classPrivateFieldGet(this, _PrimitiveData_attributeMaterial, "f");
    }
    set attributeMaterial(value) {
        __classPrivateFieldSet(this, _PrimitiveData_attributeMaterial, value, "f");
    }
    get mode() {
        return __classPrivateFieldGet(this, _PrimitiveData_mode, "f");
    }
    get threeJsObject() {
        return __classPrivateFieldGet(this, _PrimitiveData_threeJsObject, "f");
    }
    // #endregion Public Accessors (7)
    // #region Public Methods (1)
    /**
     * Clones the primitive data.
     */
    clone() {
        var _a, _b, _c;
        let attributes = {};
        for (let attribute in __classPrivateFieldGet(this, _PrimitiveData_attributes, "f"))
            attributes[attribute] = __classPrivateFieldGet(this, _PrimitiveData_attributes, "f")[attribute].clone();
        return new PrimitiveData(attributes, __classPrivateFieldGet(this, _PrimitiveData_mode, "f"), (_a = __classPrivateFieldGet(this, _PrimitiveData_indices, "f")) === null || _a === void 0 ? void 0 : _a.clone(), (_b = __classPrivateFieldGet(this, _PrimitiveData_material, "f")) === null || _b === void 0 ? void 0 : _b.clone(), (_c = __classPrivateFieldGet(this, _PrimitiveData_attributeMaterial, "f")) === null || _c === void 0 ? void 0 : _c.clone());
    }
}
exports.PrimitiveData = PrimitiveData;
_PrimitiveData_attributes = new WeakMap(), _PrimitiveData_mode = new WeakMap(), _PrimitiveData_boundingBox = new WeakMap(), _PrimitiveData_indices = new WeakMap(), _PrimitiveData_material = new WeakMap(), _PrimitiveData_standardMaterial = new WeakMap(), _PrimitiveData_effectMaterials = new WeakMap(), _PrimitiveData_materialVariants = new WeakMap(), _PrimitiveData_attributeMaterial = new WeakMap(), _PrimitiveData_threeJsObject = new WeakMap();
class GeometryData extends viewer_shared_node_tree_1.AbstractTreeNodeData {
    // #endregion Properties (4)
    // #region Constructors (1)
    /**
     * Creates a geometry data object.
     *
     * @param _primitive the primitive
     * @param _matrix the matrix to apply
     * @param id the id
     */
    constructor(primitive, matrix = gl_matrix_1.mat4.create(), id, morphWeights = []) {
        super(id);
        // #region Properties (4)
        _GeometryData_matrix.set(this, void 0);
        _GeometryData_primitive.set(this, void 0);
        _GeometryData_boundingBox.set(this, new viewer_shared_math_1.Box());
        _GeometryData_renderOrder.set(this, 0);
        _GeometryData_morphWeights.set(this, []);
        _GeometryData_skinNode.set(this, void 0);
        _GeometryData_threeJsObject.set(this, {});
        __classPrivateFieldSet(this, _GeometryData_primitive, primitive, "f");
        __classPrivateFieldSet(this, _GeometryData_matrix, matrix, "f");
        __classPrivateFieldSet(this, _GeometryData_boundingBox, this.primitive.boundingBox.clone(), "f");
        __classPrivateFieldSet(this, _GeometryData_morphWeights, morphWeights, "f");
    }
    // #endregion Constructors (1)
    // #region Public Accessors (5)
    get boundingBox() {
        return __classPrivateFieldGet(this, _GeometryData_boundingBox, "f");
    }
    get matrix() {
        return __classPrivateFieldGet(this, _GeometryData_matrix, "f");
    }
    get primitive() {
        return __classPrivateFieldGet(this, _GeometryData_primitive, "f");
    }
    get renderOrder() {
        return __classPrivateFieldGet(this, _GeometryData_renderOrder, "f");
    }
    set renderOrder(value) {
        __classPrivateFieldSet(this, _GeometryData_renderOrder, value, "f");
    }
    get morphWeights() {
        return __classPrivateFieldGet(this, _GeometryData_morphWeights, "f");
    }
    set morphWeights(value) {
        __classPrivateFieldSet(this, _GeometryData_morphWeights, value, "f");
    }
    get skinNode() {
        return __classPrivateFieldGet(this, _GeometryData_skinNode, "f");
    }
    set skinNode(value) {
        __classPrivateFieldSet(this, _GeometryData_skinNode, value, "f");
    }
    get threeJsObject() {
        return __classPrivateFieldGet(this, _GeometryData_threeJsObject, "f");
    }
    // #endregion Public Accessors (5)
    // #region Public Methods (2)
    /**
     * Clones the scene graph data.
     */
    clone() {
        return new GeometryData(__classPrivateFieldGet(this, _GeometryData_primitive, "f").clone(), gl_matrix_1.mat4.clone(this.matrix), this.id, __classPrivateFieldGet(this, _GeometryData_morphWeights, "f"));
    }
    intersect(origin, direction) {
        if (this.primitive.mode !== IGeometryData_1.PRIMITIVE_MODE.TRIANGLES)
            return null;
        return this.boundingBox.intersect(origin, direction);
    }
}
exports.GeometryData = GeometryData;
_GeometryData_matrix = new WeakMap(), _GeometryData_primitive = new WeakMap(), _GeometryData_boundingBox = new WeakMap(), _GeometryData_renderOrder = new WeakMap(), _GeometryData_morphWeights = new WeakMap(), _GeometryData_skinNode = new WeakMap(), _GeometryData_threeJsObject = new WeakMap();
//# sourceMappingURL=GeometryData.js.map