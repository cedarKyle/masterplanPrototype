import { AbstractMaterialData } from './AbstractMaterialData';
import { IMaterialStandardData, IMaterialStandardDataProperties } from '../../interfaces/data/material/IMaterialStandardData';
import { IMapData } from '../../interfaces/data/material/IMapData';
export declare class MaterialStandardData extends AbstractMaterialData implements IMaterialStandardData {
    #private;
    /**
     * Creates a material data object.
     *
     * @param _attributes the attributes of the material
     * @param id the id
     */
    constructor(properties?: IMaterialStandardDataProperties, id?: string);
    get attenuationColor(): string;
    set attenuationColor(value: string);
    get attenuationDistance(): number;
    set attenuationDistance(value: number);
    get clearcoat(): number;
    set clearcoat(value: number);
    get clearcoatMap(): IMapData | undefined;
    set clearcoatMap(value: IMapData | undefined);
    get clearcoatNormalMap(): IMapData | undefined;
    set clearcoatNormalMap(value: IMapData | undefined);
    get clearcoatRoughness(): number;
    set clearcoatRoughness(value: number);
    get clearcoatRoughnessMap(): IMapData | undefined;
    set clearcoatRoughnessMap(value: IMapData | undefined);
    get displacementMap(): IMapData | undefined;
    set displacementMap(value: IMapData | undefined);
    get displacementScale(): number;
    set displacementScale(value: number);
    get displacementBias(): number;
    set displacementBias(value: number);
    get envMap(): string | string[] | undefined;
    set envMap(value: string | string[] | undefined);
    get ior(): number;
    set ior(value: number);
    get metalness(): number;
    set metalness(value: number);
    get metalnessMap(): IMapData | undefined;
    set metalnessMap(value: IMapData | undefined);
    get metalnessRoughnessMap(): IMapData | undefined;
    set metalnessRoughnessMap(value: IMapData | undefined);
    get roughness(): number;
    set roughness(value: number);
    get roughnessMap(): IMapData | undefined;
    set roughnessMap(value: IMapData | undefined);
    get sheen(): number;
    set sheen(value: number);
    get sheenColor(): string;
    set sheenColor(value: string);
    get sheenColorMap(): IMapData | undefined;
    set sheenColorMap(value: IMapData | undefined);
    get sheenRoughness(): number;
    set sheenRoughness(value: number);
    get sheenRoughnessMap(): IMapData | undefined;
    set sheenRoughnessMap(value: IMapData | undefined);
    get specularColor(): string;
    set specularColor(value: string);
    get specularColorMap(): IMapData | undefined;
    set specularColorMap(value: IMapData | undefined);
    get specularIntensity(): number;
    set specularIntensity(value: number);
    get specularIntensityMap(): IMapData | undefined;
    set specularIntensityMap(value: IMapData | undefined);
    get thickness(): number;
    set thickness(value: number);
    get thicknessMap(): IMapData | undefined;
    set thicknessMap(value: IMapData | undefined);
    get transmission(): number;
    set transmission(value: number);
    get transmissionMap(): IMapData | undefined;
    set transmissionMap(value: IMapData | undefined);
    reset(): void;
    clone(): IMaterialStandardData;
    copy(source: MaterialStandardData): void;
}
//# sourceMappingURL=MaterialStandardData.d.ts.map