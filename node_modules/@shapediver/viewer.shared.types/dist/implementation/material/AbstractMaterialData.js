"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _AbstractMaterialData_alphaCutoff, _AbstractMaterialData_alphaMap, _AbstractMaterialData_alphaMode, _AbstractMaterialData_aoMap, _AbstractMaterialData_aoMapIntensity, _AbstractMaterialData_bumpMap, _AbstractMaterialData_bumpScale, _AbstractMaterialData_color, _AbstractMaterialData_emissiveMap, _AbstractMaterialData_emissiveness, _AbstractMaterialData_materialOutput, _AbstractMaterialData_map, _AbstractMaterialData_name, _AbstractMaterialData_normalMap, _AbstractMaterialData_normalScale, _AbstractMaterialData_opacity, _AbstractMaterialData_shading, _AbstractMaterialData_side, _AbstractMaterialData_threeJsObject;
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbstractMaterialData = void 0;
const viewer_shared_node_tree_1 = require("@shapediver/viewer.shared.node-tree");
const IMaterialAbstractData_1 = require("../../interfaces/data/material/IMaterialAbstractData");
class AbstractMaterialData extends viewer_shared_node_tree_1.AbstractTreeNodeData {
    // #endregion Properties (17)
    // #region Constructors (1)
    /**
     * Creates a material data object.
     *
     * @param _attributes the attributes of the material
     * @param id the id
     */
    constructor(properties, id) {
        super(id);
        // #region Properties (17)
        _AbstractMaterialData_alphaCutoff.set(this, 0);
        _AbstractMaterialData_alphaMap.set(this, void 0);
        _AbstractMaterialData_alphaMode.set(this, IMaterialAbstractData_1.MATERIAL_ALPHA.OPAQUE);
        _AbstractMaterialData_aoMap.set(this, void 0);
        _AbstractMaterialData_aoMapIntensity.set(this, 1.0);
        _AbstractMaterialData_bumpMap.set(this, void 0);
        _AbstractMaterialData_bumpScale.set(this, 1.0);
        _AbstractMaterialData_color.set(this, '#ffffff');
        _AbstractMaterialData_emissiveMap.set(this, void 0);
        _AbstractMaterialData_emissiveness.set(this, '#000000');
        _AbstractMaterialData_materialOutput.set(this, false);
        _AbstractMaterialData_map.set(this, void 0);
        _AbstractMaterialData_name.set(this, void 0);
        _AbstractMaterialData_normalMap.set(this, void 0);
        _AbstractMaterialData_normalScale.set(this, 1.0);
        _AbstractMaterialData_opacity.set(this, 1.0);
        _AbstractMaterialData_shading.set(this, IMaterialAbstractData_1.MATERIAL_SHADING.SMOOTH);
        _AbstractMaterialData_side.set(this, IMaterialAbstractData_1.MATERIAL_SIDE.DOUBLE);
        _AbstractMaterialData_threeJsObject.set(this, {});
        if (!properties)
            return;
        if (properties.alphaMap !== undefined)
            this.alphaMap = properties.alphaMap;
        if (properties.alphaCutoff !== undefined)
            this.alphaCutoff = properties.alphaCutoff;
        if (properties.alphaMode !== undefined)
            this.alphaMode = properties.alphaMode;
        if (properties.aoMap !== undefined)
            this.aoMap = properties.aoMap;
        if (properties.aoMapIntensity !== undefined)
            this.aoMapIntensity = properties.aoMapIntensity;
        if (properties.bumpMap !== undefined)
            this.bumpMap = properties.bumpMap;
        if (properties.bumpScale !== undefined)
            this.bumpScale = properties.bumpScale;
        if (properties.color !== undefined)
            this.color = properties.color;
        if (properties.emissiveMap !== undefined)
            this.emissiveMap = properties.emissiveMap;
        if (properties.emissiveness !== undefined)
            this.emissiveness = properties.emissiveness;
        if (properties.shading !== undefined)
            this.shading = properties.shading;
        if (properties.map !== undefined)
            this.map = properties.map;
        if (properties.name !== undefined)
            this.name = properties.name;
        if (properties.normalMap !== undefined)
            this.normalMap = properties.normalMap;
        if (properties.normalScale !== undefined)
            this.normalScale = properties.normalScale;
        if (properties.opacity !== undefined)
            this.opacity = properties.opacity;
        if (properties.side !== undefined)
            this.side = properties.side;
    }
    // #endregion Constructors (1)
    // #region Public Accessors (34)
    get alphaCutoff() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_alphaCutoff, "f");
    }
    set alphaCutoff(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_alphaCutoff, value, "f");
    }
    get alphaMap() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_alphaMap, "f");
    }
    set alphaMap(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_alphaMap, value, "f");
    }
    get alphaMode() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_alphaMode, "f");
    }
    set alphaMode(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_alphaMode, value, "f");
    }
    get aoMap() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_aoMap, "f");
    }
    set aoMap(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_aoMap, value, "f");
    }
    get aoMapIntensity() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_aoMapIntensity, "f");
    }
    set aoMapIntensity(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_aoMapIntensity, value, "f");
    }
    get bumpMap() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_bumpMap, "f");
    }
    set bumpMap(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_bumpMap, value, "f");
    }
    get bumpScale() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_bumpScale, "f");
    }
    set bumpScale(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_bumpScale, value, "f");
    }
    get color() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_color, "f");
    }
    set color(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_color, value, "f");
    }
    get emissiveMap() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_emissiveMap, "f");
    }
    set emissiveMap(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_emissiveMap, value, "f");
    }
    get emissiveness() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_emissiveness, "f");
    }
    set emissiveness(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_emissiveness, value, "f");
    }
    get map() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_map, "f");
    }
    set map(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_map, value, "f");
    }
    get materialOutput() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_materialOutput, "f");
    }
    set materialOutput(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_materialOutput, value, "f");
    }
    get name() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_name, "f");
    }
    set name(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_name, value, "f");
    }
    get normalMap() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_normalMap, "f");
    }
    set normalMap(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_normalMap, value, "f");
    }
    get normalScale() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_normalScale, "f");
    }
    set normalScale(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_normalScale, value, "f");
    }
    get opacity() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_opacity, "f");
    }
    set opacity(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_opacity, value, "f");
    }
    get shading() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_shading, "f");
    }
    set shading(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_shading, value, "f");
    }
    get side() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_side, "f");
    }
    set side(value) {
        __classPrivateFieldSet(this, _AbstractMaterialData_side, value, "f");
    }
    get threeJsObject() {
        return __classPrivateFieldGet(this, _AbstractMaterialData_threeJsObject, "f");
    }
}
exports.AbstractMaterialData = AbstractMaterialData;
_AbstractMaterialData_alphaCutoff = new WeakMap(), _AbstractMaterialData_alphaMap = new WeakMap(), _AbstractMaterialData_alphaMode = new WeakMap(), _AbstractMaterialData_aoMap = new WeakMap(), _AbstractMaterialData_aoMapIntensity = new WeakMap(), _AbstractMaterialData_bumpMap = new WeakMap(), _AbstractMaterialData_bumpScale = new WeakMap(), _AbstractMaterialData_color = new WeakMap(), _AbstractMaterialData_emissiveMap = new WeakMap(), _AbstractMaterialData_emissiveness = new WeakMap(), _AbstractMaterialData_materialOutput = new WeakMap(), _AbstractMaterialData_map = new WeakMap(), _AbstractMaterialData_name = new WeakMap(), _AbstractMaterialData_normalMap = new WeakMap(), _AbstractMaterialData_normalScale = new WeakMap(), _AbstractMaterialData_opacity = new WeakMap(), _AbstractMaterialData_shading = new WeakMap(), _AbstractMaterialData_side = new WeakMap(), _AbstractMaterialData_threeJsObject = new WeakMap();
//# sourceMappingURL=AbstractMaterialData.js.map