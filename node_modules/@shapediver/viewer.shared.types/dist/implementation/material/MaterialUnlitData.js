"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _MaterialUnlitData_envMap;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MaterialUnlitData = void 0;
const IMaterialAbstractData_1 = require("../../interfaces/data/material/IMaterialAbstractData");
const AbstractMaterialData_1 = require("./AbstractMaterialData");
class MaterialUnlitData extends AbstractMaterialData_1.AbstractMaterialData {
    // #endregion Properties (1)
    // #region Constructors (1)
    /**
     * Creates a material data object.
     *
     * @param _attributes the attributes of the material
     * @param id the id
     */
    constructor(properties, id) {
        super(properties, id);
        // #region Properties (1)
        _MaterialUnlitData_envMap.set(this, void 0);
        if (!properties)
            return;
        if (properties.envMap !== undefined)
            this.envMap = properties.envMap;
    }
    // #endregion Constructors (1)
    // #region Public Accessors (2)
    get envMap() {
        return __classPrivateFieldGet(this, _MaterialUnlitData_envMap, "f");
    }
    set envMap(value) {
        __classPrivateFieldSet(this, _MaterialUnlitData_envMap, value, "f");
    }
    // #endregion Public Accessors (2)
    // #region Public Methods (3)
    clone() {
        return new MaterialUnlitData({
            alphaMap: this.alphaMap,
            alphaCutoff: this.alphaCutoff,
            alphaMode: this.alphaMode,
            aoMap: this.aoMap,
            aoMapIntensity: this.aoMapIntensity,
            bumpMap: this.bumpMap,
            bumpScale: this.bumpScale,
            color: this.color,
            emissiveMap: this.emissiveMap,
            emissiveness: this.emissiveness,
            shading: this.shading,
            map: this.map,
            name: this.name,
            normalMap: this.normalMap,
            normalScale: this.normalScale,
            opacity: this.opacity,
            side: this.side,
            envMap: this.envMap
        }, this.id);
    }
    copy(source) {
        this.alphaCutoff = source.alphaCutoff;
        this.alphaMap = source.alphaMap;
        this.alphaMode = source.alphaMode;
        this.aoMap = source.aoMap;
        this.aoMapIntensity = source.aoMapIntensity;
        this.bumpMap = source.bumpMap;
        this.bumpScale = source.bumpScale;
        this.color = source.color;
        this.emissiveMap = source.emissiveMap;
        this.emissiveness = source.emissiveness;
        this.materialOutput = source.materialOutput;
        this.map = source.map;
        this.normalMap = source.normalMap;
        this.normalScale = source.normalScale;
        this.opacity = source.opacity;
        this.shading = source.shading;
        this.side = source.side;
        this.envMap = source.envMap;
    }
    reset() {
        this.alphaCutoff = 0;
        this.alphaMap = undefined;
        this.alphaMode = IMaterialAbstractData_1.MATERIAL_ALPHA.OPAQUE;
        this.aoMap = undefined;
        this.aoMapIntensity = 1.0;
        this.bumpMap = undefined;
        this.bumpScale = 1.0;
        this.color = '#ffffff';
        this.emissiveMap = undefined;
        this.emissiveness = '#000000';
        this.materialOutput = false;
        this.map = undefined;
        this.normalMap = undefined;
        this.normalScale = 1.0;
        this.opacity = 1.0;
        this.shading = IMaterialAbstractData_1.MATERIAL_SHADING.SMOOTH;
        this.side = IMaterialAbstractData_1.MATERIAL_SIDE.DOUBLE;
        this.envMap = undefined;
    }
}
exports.MaterialUnlitData = MaterialUnlitData;
_MaterialUnlitData_envMap = new WeakMap();
//# sourceMappingURL=MaterialUnlitData.js.map