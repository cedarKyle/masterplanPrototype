"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _MapData_center, _MapData_color, _MapData_flipY, _MapData_image, _MapData_magFilter, _MapData_minFilter, _MapData_offset, _MapData_repeat, _MapData_rotation, _MapData_wrapS, _MapData_wrapT;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MapData = void 0;
const gl_matrix_1 = require("gl-matrix");
const viewer_shared_node_tree_1 = require("@shapediver/viewer.shared.node-tree");
const IMapData_1 = require("../../interfaces/data/material/IMapData");
class MapData extends viewer_shared_node_tree_1.AbstractTreeNodeData {
    // #endregion Properties (11)
    // #region Constructors (1)
    constructor(image, wrapS = IMapData_1.TEXTURE_WRAPPING.REPEAT, wrapT = IMapData_1.TEXTURE_WRAPPING.REPEAT, minFilter = IMapData_1.TEXTURE_FILTERING.NONE, magFilter = IMapData_1.TEXTURE_FILTERING.NONE, center = gl_matrix_1.vec2.fromValues(0, 0), color, offset = gl_matrix_1.vec2.fromValues(0, 0), repeat = gl_matrix_1.vec2.fromValues(1, 1), rotation = 0, flipY = true) {
        super();
        // #region Properties (11)
        _MapData_center.set(this, gl_matrix_1.vec2.fromValues(0, 0));
        _MapData_color.set(this, void 0);
        _MapData_flipY.set(this, true);
        _MapData_image.set(this, void 0);
        _MapData_magFilter.set(this, IMapData_1.TEXTURE_FILTERING.NONE);
        _MapData_minFilter.set(this, IMapData_1.TEXTURE_FILTERING.NONE);
        _MapData_offset.set(this, gl_matrix_1.vec2.fromValues(0, 0));
        _MapData_repeat.set(this, gl_matrix_1.vec2.fromValues(1, 1));
        _MapData_rotation.set(this, 0);
        _MapData_wrapS.set(this, IMapData_1.TEXTURE_WRAPPING.REPEAT);
        _MapData_wrapT.set(this, IMapData_1.TEXTURE_WRAPPING.REPEAT);
        __classPrivateFieldSet(this, _MapData_image, image, "f");
        __classPrivateFieldSet(this, _MapData_wrapS, wrapS, "f");
        __classPrivateFieldSet(this, _MapData_wrapT, wrapT, "f");
        __classPrivateFieldSet(this, _MapData_minFilter, minFilter, "f");
        __classPrivateFieldSet(this, _MapData_magFilter, magFilter, "f");
        __classPrivateFieldSet(this, _MapData_center, center, "f");
        __classPrivateFieldSet(this, _MapData_color, color, "f");
        __classPrivateFieldSet(this, _MapData_offset, offset, "f");
        __classPrivateFieldSet(this, _MapData_repeat, repeat, "f");
        __classPrivateFieldSet(this, _MapData_rotation, rotation, "f");
        __classPrivateFieldSet(this, _MapData_flipY, flipY, "f");
    }
    // #endregion Constructors (1)
    // #region Public Accessors (11)
    get center() {
        return __classPrivateFieldGet(this, _MapData_center, "f");
    }
    get color() {
        return __classPrivateFieldGet(this, _MapData_color, "f");
    }
    get flipY() {
        return __classPrivateFieldGet(this, _MapData_flipY, "f");
    }
    get image() {
        return __classPrivateFieldGet(this, _MapData_image, "f");
    }
    get magFilter() {
        return __classPrivateFieldGet(this, _MapData_magFilter, "f");
    }
    get minFilter() {
        return __classPrivateFieldGet(this, _MapData_minFilter, "f");
    }
    get offset() {
        return __classPrivateFieldGet(this, _MapData_offset, "f");
    }
    get repeat() {
        return __classPrivateFieldGet(this, _MapData_repeat, "f");
    }
    get rotation() {
        return __classPrivateFieldGet(this, _MapData_rotation, "f");
    }
    get wrapS() {
        return __classPrivateFieldGet(this, _MapData_wrapS, "f");
    }
    get wrapT() {
        return __classPrivateFieldGet(this, _MapData_wrapT, "f");
    }
    // #endregion Public Accessors (11)
    // #region Public Methods (1)
    clone() {
        return new MapData(this.image.cloneNode(), this.wrapS, this.wrapT, this.minFilter, this.magFilter, this.center, this.color, this.offset, this.repeat, this.rotation, this.flipY);
    }
}
exports.MapData = MapData;
_MapData_center = new WeakMap(), _MapData_color = new WeakMap(), _MapData_flipY = new WeakMap(), _MapData_image = new WeakMap(), _MapData_magFilter = new WeakMap(), _MapData_minFilter = new WeakMap(), _MapData_offset = new WeakMap(), _MapData_repeat = new WeakMap(), _MapData_rotation = new WeakMap(), _MapData_wrapS = new WeakMap(), _MapData_wrapT = new WeakMap();
//# sourceMappingURL=MapData.js.map