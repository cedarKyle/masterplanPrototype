"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SDTFAttributeData_typeHint, _SDTFAttributeData_value, _SDTFAttributeData_resolvedValue, _SDTFAttributesData_attributes;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDTFAttributesData = exports.SDTFAttributeData = void 0;
const viewer_shared_node_tree_1 = require("@shapediver/viewer.shared.node-tree");
class SDTFAttributeData {
    // #endregion Properties (2)
    // #region Constructors (1)
    constructor(typeHint, value) {
        // #region Properties (2)
        _SDTFAttributeData_typeHint.set(this, void 0);
        _SDTFAttributeData_value.set(this, void 0);
        _SDTFAttributeData_resolvedValue.set(this, void 0);
        __classPrivateFieldSet(this, _SDTFAttributeData_typeHint, typeHint, "f");
        __classPrivateFieldSet(this, _SDTFAttributeData_value, value, "f");
    }
    // #endregion Constructors (1)
    // #region Public Accessors (2)
    get typeHint() {
        return __classPrivateFieldGet(this, _SDTFAttributeData_typeHint, "f");
    }
    get value() {
        if (__classPrivateFieldGet(this, _SDTFAttributeData_value, "f") instanceof Function && !__classPrivateFieldGet(this, _SDTFAttributeData_resolvedValue, "f")) {
            __classPrivateFieldSet(this, _SDTFAttributeData_resolvedValue, __classPrivateFieldGet(this, _SDTFAttributeData_value, "f").call(this), "f");
            return __classPrivateFieldGet(this, _SDTFAttributeData_resolvedValue, "f");
        }
        else if (__classPrivateFieldGet(this, _SDTFAttributeData_value, "f") instanceof Function) {
            return __classPrivateFieldGet(this, _SDTFAttributeData_resolvedValue, "f");
        }
        return __classPrivateFieldGet(this, _SDTFAttributeData_value, "f");
    }
}
exports.SDTFAttributeData = SDTFAttributeData;
_SDTFAttributeData_typeHint = new WeakMap(), _SDTFAttributeData_value = new WeakMap(), _SDTFAttributeData_resolvedValue = new WeakMap();
// export class SDTFAttributeAsyncData {
//     // #region Properties (2)
//     readonly #typeHint;
//     readonly #accessor;
//     private _value: Promise<any> | undefined;
//     private readonly _loadAccessor: (accessorID: number) => Promise<any>
//     // #endregion Properties (2)
//     // #region Constructors (1)
//     constructor(
//             typeHint: string,
//             accessor: number,
//         private readonly _loadAccessor: (accessorID: number) => Promise<any>
//     ) {
//         this._typeHint = typeHint;
//         this._accessor = accessor;
//     }
//     public get value(): Promise<any> {
//         if (this.value !== undefined) {
//             return this._value!;
//         } else {
//             this._value = this._loadAccessor!(this._accessor!);
//             return this._value;
//         }
//     }
//     public get typeHint(): string {
//         return this._typeHint;
//     }
//     // #endregion Constructors (1)
// }
class SDTFAttributesData extends viewer_shared_node_tree_1.AbstractTreeNodeData {
    // #endregion Properties (1)
    // #region Constructors (1)
    constructor(attributes = {}, id) {
        super(id);
        // #region Properties (1)
        _SDTFAttributesData_attributes.set(this, {});
        __classPrivateFieldSet(this, _SDTFAttributesData_attributes, attributes, "f");
    }
    // #endregion Constructors (1)
    // #region Public Accessors (1)
    get attributes() {
        return __classPrivateFieldGet(this, _SDTFAttributesData_attributes, "f");
    }
    // #endregion Public Accessors (1)
    // #region Public Methods (1)
    /**
     * Clones the scene graph data.
     */
    clone() {
        return new SDTFAttributesData(this.attributes, this.id);
    }
}
exports.SDTFAttributesData = SDTFAttributesData;
_SDTFAttributesData_attributes = new WeakMap();
//# sourceMappingURL=SDTFAttributesData.js.map