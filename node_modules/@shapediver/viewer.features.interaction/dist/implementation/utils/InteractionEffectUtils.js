"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _InteractionEffectUtils_uuidGenerator;
Object.defineProperty(exports, "__esModule", { value: true });
exports.InteractionEffectUtils = void 0;
const tsyringe_1 = require("tsyringe");
const viewer_shared_types_1 = require("@shapediver/viewer.shared.types");
const viewer_shared_services_1 = require("@shapediver/viewer.shared.services");
let InteractionEffectUtils = class InteractionEffectUtils {
    constructor() {
        // #region Properties (1)
        _InteractionEffectUtils_uuidGenerator.set(this, tsyringe_1.container.resolve(viewer_shared_services_1.UuidGenerator));
        // #endregion Public Methods (2)
    }
    // #endregion Properties (1)
    // #region Public Methods (2)
    /**
     * Apply the effect material to the node and all descendents.
     *
     * @param node
     * @param material
     * @returns
     */
    applyEffectMaterial(node, material) {
        const token = __classPrivateFieldGet(this, _InteractionEffectUtils_uuidGenerator, "f").create();
        const applyEffect = (node) => {
            for (let i = 0; i < node.data.length; i++) {
                if (node.data[i] instanceof viewer_shared_types_1.GeometryData) {
                    const geometryData = node.data[i];
                    geometryData.primitive.effectMaterials.push({ material, token });
                }
            }
            for (let i = 0; i < node.children.length; i++) {
                applyEffect(node.children[i]);
            }
        };
        applyEffect(node);
        node.updateVersion();
        return token;
    }
    /**
     * Remove the effect material with the specified token from the node and all descendents.
     *
     * @param node
     * @param token
     */
    removeEffectMaterial(node, token) {
        const removeEffect = (node) => {
            for (let i = 0; i < node.data.length; i++) {
                if (node.data[i] instanceof viewer_shared_types_1.GeometryData) {
                    const geometryData = node.data[i];
                    const index = geometryData.primitive.effectMaterials.findIndex(e => e.token === token);
                    if (index !== -1)
                        geometryData.primitive.effectMaterials.splice(index, 1);
                }
            }
            for (let i = 0; i < node.children.length; i++) {
                removeEffect(node.children[i]);
            }
        };
        removeEffect(node);
        node.updateVersion();
    }
};
_InteractionEffectUtils_uuidGenerator = new WeakMap();
InteractionEffectUtils = __decorate([
    (0, tsyringe_1.singleton)()
], InteractionEffectUtils);
exports.InteractionEffectUtils = InteractionEffectUtils;
//# sourceMappingURL=InteractionEffectUtils.js.map