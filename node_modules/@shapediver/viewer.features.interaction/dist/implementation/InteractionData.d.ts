import { AbstractTreeNodeData } from '@shapediver/viewer.shared.node-tree';
import { vec3 } from 'gl-matrix';
import { IInteractionData, IInteractionTypes } from '../interfaces/IInteractionData';
export declare class InteractionData extends AbstractTreeNodeData implements IInteractionData {
    #private;
    /**
     * Creates a custom data node.
     *
     * @param _data the data as key- value pairs
     * @param id the id
     */
    constructor(interactionTypes: IInteractionTypes, id?: string);
    get dragAnchors(): {
        position: vec3;
        rotation?: {
            axis: vec3;
            angle: number;
        };
    }[];
    set dragAnchors(value: {
        position: vec3;
        rotation?: {
            axis: vec3;
            angle: number;
        };
    }[]);
    get dragOrigin(): vec3 | undefined;
    set dragOrigin(value: vec3 | undefined);
    get interactionStates(): IInteractionTypes;
    set interactionStates(value: IInteractionTypes);
    get interactionTypes(): IInteractionTypes;
    set interactionTypes(value: IInteractionTypes);
    /**
     * Clones the scene graph data.
     */
    clone(): IInteractionData;
}
//# sourceMappingURL=InteractionData.d.ts.map