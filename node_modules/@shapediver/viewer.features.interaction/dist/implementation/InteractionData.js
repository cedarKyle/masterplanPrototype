"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _InteractionData_dragAnchors, _InteractionData_dragOrigin, _InteractionData_interactionStates, _InteractionData_interactionTypes;
Object.defineProperty(exports, "__esModule", { value: true });
exports.InteractionData = void 0;
const viewer_shared_node_tree_1 = require("@shapediver/viewer.shared.node-tree");
class InteractionData extends viewer_shared_node_tree_1.AbstractTreeNodeData {
    // #endregion Properties (4)
    // #region Constructors (1)
    /**
     * Creates a custom data node.
     *
     * @param _data the data as key- value pairs
     * @param id the id
     */
    constructor(interactionTypes, id) {
        super(id);
        // #region Properties (4)
        _InteractionData_dragAnchors.set(this, []);
        _InteractionData_dragOrigin.set(this, void 0);
        _InteractionData_interactionStates.set(this, {});
        _InteractionData_interactionTypes.set(this, {});
        __classPrivateFieldSet(this, _InteractionData_interactionTypes, interactionTypes, "f");
    }
    // #endregion Constructors (1)
    // #region Public Accessors (8)
    get dragAnchors() {
        return __classPrivateFieldGet(this, _InteractionData_dragAnchors, "f");
    }
    set dragAnchors(value) {
        __classPrivateFieldSet(this, _InteractionData_dragAnchors, value, "f");
    }
    get dragOrigin() {
        return __classPrivateFieldGet(this, _InteractionData_dragOrigin, "f");
    }
    set dragOrigin(value) {
        __classPrivateFieldSet(this, _InteractionData_dragOrigin, value, "f");
    }
    get interactionStates() {
        return __classPrivateFieldGet(this, _InteractionData_interactionStates, "f");
    }
    set interactionStates(value) {
        __classPrivateFieldSet(this, _InteractionData_interactionStates, value, "f");
    }
    get interactionTypes() {
        return __classPrivateFieldGet(this, _InteractionData_interactionTypes, "f");
    }
    set interactionTypes(value) {
        __classPrivateFieldSet(this, _InteractionData_interactionTypes, value, "f");
    }
    // #endregion Public Accessors (8)
    // #region Public Methods (1)
    /**
     * Clones the scene graph data.
     */
    clone() {
        return new InteractionData(__classPrivateFieldGet(this, _InteractionData_interactionTypes, "f"), this.id);
    }
}
exports.InteractionData = InteractionData;
_InteractionData_dragAnchors = new WeakMap(), _InteractionData_dragOrigin = new WeakMap(), _InteractionData_interactionStates = new WeakMap(), _InteractionData_interactionTypes = new WeakMap();
//# sourceMappingURL=InteractionData.js.map