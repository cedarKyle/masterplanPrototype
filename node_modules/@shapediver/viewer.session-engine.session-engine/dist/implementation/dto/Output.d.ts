import { ShapeDiverResponseModelComputationStatus, ShapeDiverResponseOutput } from "@shapediver/sdk.geometry-api-sdk-v2";
import { ITreeNode, TreeNode } from "@shapediver/viewer.shared.node-tree";
import { IOutput, ShapeDiverResponseOutputContent, ShapeDiverResponseOutputChunk } from "../../interfaces/dto/IOutput";
import { SessionEngine } from "../SessionEngine";
export declare class Output implements IOutput {
    #private;
    constructor(outputDef: ShapeDiverResponseOutput, sessionEngine: SessionEngine);
    get bbmax(): number[] | undefined;
    get bbmin(): number[] | undefined;
    get chunks(): ShapeDiverResponseOutputChunk[] | undefined;
    get content(): ShapeDiverResponseOutputContent[] | undefined;
    set content(value: ShapeDiverResponseOutputContent[] | undefined);
    get delay(): number | undefined;
    get dependency(): string[];
    get displayname(): string | undefined;
    set displayname(value: string | undefined);
    get format(): string[];
    get freeze(): boolean;
    set freeze(value: boolean);
    get hidden(): boolean;
    set hidden(value: boolean);
    get id(): string;
    get material(): string | undefined;
    get msg(): string | undefined;
    get name(): string;
    get node(): ITreeNode;
    get order(): number | undefined;
    set order(value: number | undefined);
    get status_collect(): ShapeDiverResponseModelComputationStatus | undefined;
    get status_computation(): ShapeDiverResponseModelComputationStatus | undefined;
    get tooltip(): string | undefined;
    set tooltip(value: string | undefined);
    get uid(): string | undefined;
    get updateCallback(): ((newNode?: ITreeNode, oldNode?: ITreeNode) => void) | null;
    set updateCallback(value: ((newNode?: ITreeNode, oldNode?: ITreeNode) => void) | null);
    get version(): string;
    set version(value: string);
    updateOutput(newNode?: TreeNode, oldNode?: TreeNode): void;
    updateOutputContent(outputContent: ShapeDiverResponseOutputContent[], preventUpdate?: boolean): Promise<ITreeNode | undefined>;
    updateOutputDefinition(outputDef: ShapeDiverResponseOutput): void;
}
//# sourceMappingURL=Output.d.ts.map