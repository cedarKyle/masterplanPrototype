"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SdtfPrimitiveTypeIntegration = void 0;
const sdk_sdtf_core_1 = require("@shapediver/sdk.sdtf-core");
const SdtfPrimitiveTypeReader_1 = require("./SdtfPrimitiveTypeReader");
const SdtfPrimitiveTypeWriter_1 = require("./SdtfPrimitiveTypeWriter");
class SdtfPrimitiveTypeIntegration {
    isTypeHintSupported(typeHintName) {
        return (0, sdk_sdtf_core_1.enumValues)(sdk_sdtf_core_1.SdtfPrimitiveTypeHintName).includes(typeHintName);
    }
    init() {
        return __awaiter(this, void 0, void 0, function* () {
        });
    }
    getReader() {
        return new SdtfPrimitiveTypeReader_1.SdtfPrimitiveTypeReader();
    }
    getWriter(factory) {
        return new SdtfPrimitiveTypeWriter_1.SdtfPrimitiveTypeWriter(factory);
    }
}
exports.SdtfPrimitiveTypeIntegration = SdtfPrimitiveTypeIntegration;
//# sourceMappingURL=SdtfPrimitiveTypeIntegration.js.map