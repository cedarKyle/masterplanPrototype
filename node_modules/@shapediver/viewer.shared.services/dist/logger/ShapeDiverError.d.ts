export declare enum ShapeDiverViewerErrorType {
    AR_ERROR = "SdARError",
    CAMERA_ERROR = "SdCameraError",
    CONNECTION_ERROR = "SdConnectionError",
    DATA_PROCESSING_ERROR = "SdDataProcessingError",
    ENVIRONMENT_MAP_ERROR = "SdEnvironmentMapError",
    GENERAL_VIEWPORT_ERROR = "SdGeneralViewerError",
    INTERACTION_ERROR = "SdInteractionError",
    LIGHT_ERROR = "SdLightError",
    SESSION_ERROR = "SdSessionError",
    SETTINGS_ERROR = "SdSettingsError",
    VALIDATION_ERROR = "SdValidationError",
    WEBGL_ERROR = "SdWebGLError",
    UNKNOWN = ""
}
export interface IShapeDiverViewerError {
    error: ShapeDiverViewerErrorType;
    desc: string;
    message: string;
}
export declare class ShapeDiverError extends Error {
    constructor(message: string);
}
export declare class ShapeDiverViewerError extends ShapeDiverError implements IShapeDiverViewerError {
    readonly error: ShapeDiverViewerErrorType;
    readonly desc: string;
    constructor(error: ShapeDiverViewerErrorType, desc: string, message: string);
}
//# sourceMappingURL=ShapeDiverError.d.ts.map