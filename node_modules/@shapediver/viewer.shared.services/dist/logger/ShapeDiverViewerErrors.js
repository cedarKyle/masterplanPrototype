"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShapeDiverViewerInteractionError = exports.ShapeDiverViewerConnectionError = exports.ShapeDiverViewerValidationError = exports.ShapeDiverViewerArError = exports.ShapeDiverViewerGeneralError = exports.ShapeDiverViewerCameraError = exports.ShapeDiverViewerLightError = exports.ShapeDiverViewerSessionError = exports.ShapeDiverViewerSettingsError = exports.ShapeDiverViewerWebGLError = exports.ShapeDiverViewerEnvironmentMapError = exports.ShapeDiverViewerDataProcessingError = exports.ShapeDiverViewerUnknownError = void 0;
const ShapeDiverError_1 = require("./ShapeDiverError");
class ShapeDiverViewerUnknownError extends ShapeDiverError_1.ShapeDiverViewerError {
    constructor(message, errorObject) {
        super(ShapeDiverError_1.ShapeDiverViewerErrorType.UNKNOWN, 'An unknown error occurred.', message);
        this.message = message;
        this.errorObject = errorObject;
        Error.captureStackTrace(this, ShapeDiverViewerUnknownError);
    }
}
exports.ShapeDiverViewerUnknownError = ShapeDiverViewerUnknownError;
class ShapeDiverViewerDataProcessingError extends ShapeDiverError_1.ShapeDiverViewerError {
    constructor(message, errorObject) {
        super(ShapeDiverError_1.ShapeDiverViewerErrorType.DATA_PROCESSING_ERROR, 'An error occurred while processing data.', message);
        this.message = message;
        this.errorObject = errorObject;
    }
}
exports.ShapeDiverViewerDataProcessingError = ShapeDiverViewerDataProcessingError;
class ShapeDiverViewerEnvironmentMapError extends ShapeDiverError_1.ShapeDiverViewerError {
    constructor(message, url, errorObject) {
        super(ShapeDiverError_1.ShapeDiverViewerErrorType.ENVIRONMENT_MAP_ERROR, 'An error occurred while loading the environment map.', message);
        this.message = message;
        this.url = url;
        this.errorObject = errorObject;
    }
}
exports.ShapeDiverViewerEnvironmentMapError = ShapeDiverViewerEnvironmentMapError;
class ShapeDiverViewerWebGLError extends ShapeDiverError_1.ShapeDiverViewerError {
    constructor(message, errorObject) {
        super(ShapeDiverError_1.ShapeDiverViewerErrorType.WEBGL_ERROR, 'An error occurred regarding to the WebGL context.', message);
        this.message = message;
        this.errorObject = errorObject;
    }
}
exports.ShapeDiverViewerWebGLError = ShapeDiverViewerWebGLError;
class ShapeDiverViewerSettingsError extends ShapeDiverError_1.ShapeDiverViewerError {
    constructor(message, errorObject) {
        super(ShapeDiverError_1.ShapeDiverViewerErrorType.SETTINGS_ERROR, 'An error occurred while loading the settings.', message);
        this.message = message;
        this.errorObject = errorObject;
    }
}
exports.ShapeDiverViewerSettingsError = ShapeDiverViewerSettingsError;
class ShapeDiverViewerSessionError extends ShapeDiverError_1.ShapeDiverViewerError {
    constructor(message, errorObject) {
        super(ShapeDiverError_1.ShapeDiverViewerErrorType.SESSION_ERROR, 'An error occurred while working with the session.', message);
        this.message = message;
        this.errorObject = errorObject;
    }
}
exports.ShapeDiverViewerSessionError = ShapeDiverViewerSessionError;
class ShapeDiverViewerLightError extends ShapeDiverError_1.ShapeDiverViewerError {
    constructor(message, errorObject) {
        super(ShapeDiverError_1.ShapeDiverViewerErrorType.LIGHT_ERROR, 'An error occurred while working with the lights.', message);
        this.message = message;
        this.errorObject = errorObject;
    }
}
exports.ShapeDiverViewerLightError = ShapeDiverViewerLightError;
class ShapeDiverViewerCameraError extends ShapeDiverError_1.ShapeDiverViewerError {
    constructor(message, errorObject) {
        super(ShapeDiverError_1.ShapeDiverViewerErrorType.CAMERA_ERROR, 'An error occurred while working with the cameras.', message);
        this.message = message;
        this.errorObject = errorObject;
    }
}
exports.ShapeDiverViewerCameraError = ShapeDiverViewerCameraError;
class ShapeDiverViewerGeneralError extends ShapeDiverError_1.ShapeDiverViewerError {
    constructor(message, errorObject) {
        super(ShapeDiverError_1.ShapeDiverViewerErrorType.GENERAL_VIEWPORT_ERROR, 'An error occurred while working with the viewer.', message);
        this.message = message;
        this.errorObject = errorObject;
    }
}
exports.ShapeDiverViewerGeneralError = ShapeDiverViewerGeneralError;
class ShapeDiverViewerArError extends ShapeDiverError_1.ShapeDiverViewerError {
    constructor(message, errorObject) {
        super(ShapeDiverError_1.ShapeDiverViewerErrorType.AR_ERROR, 'An error occurred while working with AR.', message);
        this.message = message;
        this.errorObject = errorObject;
    }
}
exports.ShapeDiverViewerArError = ShapeDiverViewerArError;
class ShapeDiverViewerValidationError extends ShapeDiverError_1.ShapeDiverViewerError {
    constructor(message, value, requestedType, errorObject) {
        super(ShapeDiverError_1.ShapeDiverViewerErrorType.VALIDATION_ERROR, 'An error occurred while validating the value.', message);
        this.message = message;
        this.value = value;
        this.requestedType = requestedType;
        this.errorObject = errorObject;
    }
}
exports.ShapeDiverViewerValidationError = ShapeDiverViewerValidationError;
class ShapeDiverViewerConnectionError extends ShapeDiverError_1.ShapeDiverViewerError {
    constructor(message, status, errorObject) {
        super(ShapeDiverError_1.ShapeDiverViewerErrorType.CONNECTION_ERROR, 'An error occurred while loading data.', message);
        this.message = message;
        this.status = status;
        this.errorObject = errorObject;
    }
}
exports.ShapeDiverViewerConnectionError = ShapeDiverViewerConnectionError;
class ShapeDiverViewerInteractionError extends ShapeDiverError_1.ShapeDiverViewerError {
    constructor(message) {
        super(ShapeDiverError_1.ShapeDiverViewerErrorType.INTERACTION_ERROR, 'An error occurred with interactions.', message);
        this.message = message;
    }
}
exports.ShapeDiverViewerInteractionError = ShapeDiverViewerInteractionError;
//# sourceMappingURL=ShapeDiverViewerErrors.js.map