"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MaterialSpecularGlossinessData = exports.MaterialUnlitData = exports.MaterialStandardData = exports.ThreejsData = exports.Sphere = exports.Box = exports.EVENTTYPE_TASK = exports.EVENTTYPE_INTERACTION = exports.EVENTTYPE_VIEWPORT = exports.EVENTTYPE_SESSION = exports.EVENTTYPE_SCENE = exports.EVENTTYPE_RENDERING = exports.EVENTTYPE_CAMERA = exports.EVENTTYPE = exports.TASK_TYPE = exports.SPINNER_POSITIONING = exports.SESSION_SETTINGS_MODE = exports.BUSY_MODE_DISPLAY = exports.SDTF_TYPEHINT = exports.TEXTURE_FILTERING = exports.TEXTURE_WRAPPING = exports.MATERIAL_SHADING = exports.MATERIAL_ALPHA = exports.MATERIAL_SIDE = exports.PRIMITIVE_MODE = exports.LOGGING_TOPIC = exports.LOGGING_LEVEL = exports.ENVIRONMENT_MAP_CUBE = exports.ENVIRONMENT_MAP = exports.TONE_MAPPING = exports.TEXTURE_ENCODING = exports.ORTHOGRAPHIC_CAMERA_DIRECTION = exports.VISIBILITY_MODE = exports.RENDERER_TYPE = exports.LIGHT_TYPE = exports.CAMERA_TYPE = exports.TAG3D_JUSTIFICATION = exports.PARAMETER_VISUALIZATION = exports.PARAMETER_TYPE = exports.FLAG_TYPE = exports.TreeNode = exports.Tree = exports.generalOptions = exports.sceneTree = exports.viewports = exports.sessions = exports.removeListener = exports.addListener = exports.createSession = exports.createViewport = void 0;
exports.NodeTreeUtils = exports.OutputApiData = exports.SessionApiData = exports.SessionOutputData = exports.SessionData = exports.MaterialEngine = exports.GeometryEngine = exports.DataEngine = exports.SdtfPrimitiveTypeGuard = exports.SDTFItemData = exports.SDTFAttributeData = exports.SDTFAttributesData = exports.SDTFOverviewData = exports.CustomData = exports.HTMLElementAnchorData = exports.HTMLElementAnchorImageData = exports.HTMLElementAnchorTextData = exports.HTMLElementAnchorCustomData = exports.MaterialVariantsData = exports.PrimitiveData = exports.AttributeData = exports.GeometryData = exports.AnimationData = exports.MapData = exports.MaterialGemData = void 0;
require("reflect-metadata");
const viewer_shared_node_tree_1 = require("@shapediver/viewer.shared.node-tree");
Object.defineProperty(exports, "Tree", { enumerable: true, get: function () { return viewer_shared_node_tree_1.Tree; } });
Object.defineProperty(exports, "TreeNode", { enumerable: true, get: function () { return viewer_shared_node_tree_1.TreeNode; } });
const viewer_data_engine_shared_types_1 = require("@shapediver/viewer.data-engine.shared-types");
Object.defineProperty(exports, "TAG3D_JUSTIFICATION", { enumerable: true, get: function () { return viewer_data_engine_shared_types_1.TAG3D_JUSTIFICATION; } });
const viewer_rendering_engine_camera_engine_1 = require("@shapediver/viewer.rendering-engine.camera-engine");
Object.defineProperty(exports, "CAMERA_TYPE", { enumerable: true, get: function () { return viewer_rendering_engine_camera_engine_1.CAMERA_TYPE; } });
Object.defineProperty(exports, "ORTHOGRAPHIC_CAMERA_DIRECTION", { enumerable: true, get: function () { return viewer_rendering_engine_camera_engine_1.ORTHOGRAPHIC_CAMERA_DIRECTION; } });
const viewer_rendering_engine_light_engine_1 = require("@shapediver/viewer.rendering-engine.light-engine");
Object.defineProperty(exports, "LIGHT_TYPE", { enumerable: true, get: function () { return viewer_rendering_engine_light_engine_1.LIGHT_TYPE; } });
const viewer_rendering_engine_rendering_engine_1 = require("@shapediver/viewer.rendering-engine.rendering-engine");
Object.defineProperty(exports, "RENDERER_TYPE", { enumerable: true, get: function () { return viewer_rendering_engine_rendering_engine_1.RENDERER_TYPE; } });
Object.defineProperty(exports, "VISIBILITY_MODE", { enumerable: true, get: function () { return viewer_rendering_engine_rendering_engine_1.VISIBILITY_MODE; } });
Object.defineProperty(exports, "TEXTURE_ENCODING", { enumerable: true, get: function () { return viewer_rendering_engine_rendering_engine_1.TEXTURE_ENCODING; } });
Object.defineProperty(exports, "TONE_MAPPING", { enumerable: true, get: function () { return viewer_rendering_engine_rendering_engine_1.TONE_MAPPING; } });
Object.defineProperty(exports, "FLAG_TYPE", { enumerable: true, get: function () { return viewer_rendering_engine_rendering_engine_1.FLAG_TYPE; } });
Object.defineProperty(exports, "BUSY_MODE_DISPLAY", { enumerable: true, get: function () { return viewer_rendering_engine_rendering_engine_1.BUSY_MODE_DISPLAY; } });
Object.defineProperty(exports, "SESSION_SETTINGS_MODE", { enumerable: true, get: function () { return viewer_rendering_engine_rendering_engine_1.SESSION_SETTINGS_MODE; } });
Object.defineProperty(exports, "SPINNER_POSITIONING", { enumerable: true, get: function () { return viewer_rendering_engine_rendering_engine_1.SPINNER_POSITIONING; } });
const viewer_shared_services_1 = require("@shapediver/viewer.shared.services");
Object.defineProperty(exports, "EVENTTYPE", { enumerable: true, get: function () { return viewer_shared_services_1.EVENTTYPE; } });
Object.defineProperty(exports, "LOGGING_LEVEL", { enumerable: true, get: function () { return viewer_shared_services_1.LOGGING_LEVEL; } });
Object.defineProperty(exports, "LOGGING_TOPIC", { enumerable: true, get: function () { return viewer_shared_services_1.LOGGING_TOPIC; } });
Object.defineProperty(exports, "EVENTTYPE_CAMERA", { enumerable: true, get: function () { return viewer_shared_services_1.EVENTTYPE_CAMERA; } });
Object.defineProperty(exports, "EVENTTYPE_RENDERING", { enumerable: true, get: function () { return viewer_shared_services_1.EVENTTYPE_RENDERING; } });
Object.defineProperty(exports, "EVENTTYPE_SCENE", { enumerable: true, get: function () { return viewer_shared_services_1.EVENTTYPE_SCENE; } });
Object.defineProperty(exports, "EVENTTYPE_SESSION", { enumerable: true, get: function () { return viewer_shared_services_1.EVENTTYPE_SESSION; } });
Object.defineProperty(exports, "EVENTTYPE_VIEWPORT", { enumerable: true, get: function () { return viewer_shared_services_1.EVENTTYPE_VIEWPORT; } });
Object.defineProperty(exports, "EVENTTYPE_INTERACTION", { enumerable: true, get: function () { return viewer_shared_services_1.EVENTTYPE_INTERACTION; } });
Object.defineProperty(exports, "EVENTTYPE_TASK", { enumerable: true, get: function () { return viewer_shared_services_1.EVENTTYPE_TASK; } });
const viewer_shared_types_1 = require("@shapediver/viewer.shared.types");
Object.defineProperty(exports, "PRIMITIVE_MODE", { enumerable: true, get: function () { return viewer_shared_types_1.PRIMITIVE_MODE; } });
Object.defineProperty(exports, "MATERIAL_SIDE", { enumerable: true, get: function () { return viewer_shared_types_1.MATERIAL_SIDE; } });
Object.defineProperty(exports, "MATERIAL_ALPHA", { enumerable: true, get: function () { return viewer_shared_types_1.MATERIAL_ALPHA; } });
Object.defineProperty(exports, "MATERIAL_SHADING", { enumerable: true, get: function () { return viewer_shared_types_1.MATERIAL_SHADING; } });
Object.defineProperty(exports, "TEXTURE_WRAPPING", { enumerable: true, get: function () { return viewer_shared_types_1.TEXTURE_WRAPPING; } });
Object.defineProperty(exports, "TEXTURE_FILTERING", { enumerable: true, get: function () { return viewer_shared_types_1.TEXTURE_FILTERING; } });
Object.defineProperty(exports, "SDTF_TYPEHINT", { enumerable: true, get: function () { return viewer_shared_types_1.SDTF_TYPEHINT; } });
Object.defineProperty(exports, "TASK_TYPE", { enumerable: true, get: function () { return viewer_shared_types_1.TASK_TYPE; } });
Object.defineProperty(exports, "AnimationData", { enumerable: true, get: function () { return viewer_shared_types_1.AnimationData; } });
Object.defineProperty(exports, "MaterialStandardData", { enumerable: true, get: function () { return viewer_shared_types_1.MaterialStandardData; } });
Object.defineProperty(exports, "MaterialUnlitData", { enumerable: true, get: function () { return viewer_shared_types_1.MaterialUnlitData; } });
Object.defineProperty(exports, "MaterialSpecularGlossinessData", { enumerable: true, get: function () { return viewer_shared_types_1.MaterialSpecularGlossinessData; } });
Object.defineProperty(exports, "SdtfPrimitiveTypeGuard", { enumerable: true, get: function () { return viewer_shared_types_1.SdtfPrimitiveTypeGuard; } });
Object.defineProperty(exports, "AttributeData", { enumerable: true, get: function () { return viewer_shared_types_1.AttributeData; } });
Object.defineProperty(exports, "CustomData", { enumerable: true, get: function () { return viewer_shared_types_1.CustomData; } });
Object.defineProperty(exports, "GeometryData", { enumerable: true, get: function () { return viewer_shared_types_1.GeometryData; } });
Object.defineProperty(exports, "HTMLElementAnchorCustomData", { enumerable: true, get: function () { return viewer_shared_types_1.HTMLElementAnchorCustomData; } });
Object.defineProperty(exports, "HTMLElementAnchorData", { enumerable: true, get: function () { return viewer_shared_types_1.HTMLElementAnchorData; } });
Object.defineProperty(exports, "HTMLElementAnchorImageData", { enumerable: true, get: function () { return viewer_shared_types_1.HTMLElementAnchorImageData; } });
Object.defineProperty(exports, "HTMLElementAnchorTextData", { enumerable: true, get: function () { return viewer_shared_types_1.HTMLElementAnchorTextData; } });
Object.defineProperty(exports, "MapData", { enumerable: true, get: function () { return viewer_shared_types_1.MapData; } });
Object.defineProperty(exports, "MaterialVariantsData", { enumerable: true, get: function () { return viewer_shared_types_1.MaterialVariantsData; } });
Object.defineProperty(exports, "PrimitiveData", { enumerable: true, get: function () { return viewer_shared_types_1.PrimitiveData; } });
Object.defineProperty(exports, "SDTFAttributeData", { enumerable: true, get: function () { return viewer_shared_types_1.SDTFAttributeData; } });
Object.defineProperty(exports, "SDTFAttributesData", { enumerable: true, get: function () { return viewer_shared_types_1.SDTFAttributesData; } });
Object.defineProperty(exports, "SDTFItemData", { enumerable: true, get: function () { return viewer_shared_types_1.SDTFItemData; } });
Object.defineProperty(exports, "SDTFOverviewData", { enumerable: true, get: function () { return viewer_shared_types_1.SDTFOverviewData; } });
Object.defineProperty(exports, "MaterialGemData", { enumerable: true, get: function () { return viewer_shared_types_1.MaterialGemData; } });
const viewer_rendering_engine_threejs_standard_1 = require("@shapediver/viewer.rendering-engine-threejs.standard");
Object.defineProperty(exports, "ENVIRONMENT_MAP", { enumerable: true, get: function () { return viewer_rendering_engine_threejs_standard_1.ENVIRONMENT_MAP; } });
Object.defineProperty(exports, "ENVIRONMENT_MAP_CUBE", { enumerable: true, get: function () { return viewer_rendering_engine_threejs_standard_1.ENVIRONMENT_MAP_CUBE; } });
Object.defineProperty(exports, "ThreejsData", { enumerable: true, get: function () { return viewer_rendering_engine_threejs_standard_1.ThreejsData; } });
const main_1 = require("./main");
Object.defineProperty(exports, "addListener", { enumerable: true, get: function () { return main_1.addListener; } });
Object.defineProperty(exports, "createSession", { enumerable: true, get: function () { return main_1.createSession; } });
Object.defineProperty(exports, "createViewport", { enumerable: true, get: function () { return main_1.createViewport; } });
Object.defineProperty(exports, "generalOptions", { enumerable: true, get: function () { return main_1.generalOptions; } });
Object.defineProperty(exports, "removeListener", { enumerable: true, get: function () { return main_1.removeListener; } });
Object.defineProperty(exports, "sceneTree", { enumerable: true, get: function () { return main_1.sceneTree; } });
Object.defineProperty(exports, "sessions", { enumerable: true, get: function () { return main_1.sessions; } });
Object.defineProperty(exports, "viewports", { enumerable: true, get: function () { return main_1.viewports; } });
const viewer_shared_math_1 = require("@shapediver/viewer.shared.math");
Object.defineProperty(exports, "Box", { enumerable: true, get: function () { return viewer_shared_math_1.Box; } });
Object.defineProperty(exports, "Sphere", { enumerable: true, get: function () { return viewer_shared_math_1.Sphere; } });
const viewer_session_engine_session_engine_1 = require("@shapediver/viewer.session-engine.session-engine");
Object.defineProperty(exports, "PARAMETER_TYPE", { enumerable: true, get: function () { return viewer_session_engine_session_engine_1.PARAMETER_TYPE; } });
Object.defineProperty(exports, "PARAMETER_VISUALIZATION", { enumerable: true, get: function () { return viewer_session_engine_session_engine_1.PARAMETER_VISUALIZATION; } });
Object.defineProperty(exports, "SessionData", { enumerable: true, get: function () { return viewer_session_engine_session_engine_1.SessionData; } });
Object.defineProperty(exports, "SessionOutputData", { enumerable: true, get: function () { return viewer_session_engine_session_engine_1.SessionOutputData; } });
const viewer_data_engine_data_engine_1 = require("@shapediver/viewer.data-engine.data-engine");
Object.defineProperty(exports, "DataEngine", { enumerable: true, get: function () { return viewer_data_engine_data_engine_1.DataEngine; } });
const viewer_data_engine_geometry_engine_1 = require("@shapediver/viewer.data-engine.geometry-engine");
Object.defineProperty(exports, "GeometryEngine", { enumerable: true, get: function () { return viewer_data_engine_geometry_engine_1.GeometryEngine; } });
const viewer_data_engine_material_engine_1 = require("@shapediver/viewer.data-engine.material-engine");
Object.defineProperty(exports, "MaterialEngine", { enumerable: true, get: function () { return viewer_data_engine_material_engine_1.MaterialEngine; } });
const OutputApiData_1 = require("./implementation/session/data/OutputApiData");
Object.defineProperty(exports, "OutputApiData", { enumerable: true, get: function () { return OutputApiData_1.OutputApiData; } });
const SessionApiData_1 = require("./implementation/session/data/SessionApiData");
Object.defineProperty(exports, "SessionApiData", { enumerable: true, get: function () { return SessionApiData_1.SessionApiData; } });
const viewer_shared_node_tree_utils_1 = require("@shapediver/viewer.shared.node-tree-utils");
Object.defineProperty(exports, "NodeTreeUtils", { enumerable: true, get: function () { return viewer_shared_node_tree_utils_1.NodeTreeUtils; } });
//# sourceMappingURL=index.js.map