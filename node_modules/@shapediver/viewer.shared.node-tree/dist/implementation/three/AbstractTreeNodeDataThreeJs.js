"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _AbstractTreeNodeDataThreeJs_threeJsObject, _AbstractTreeNodeDataThreeJs_updateCallbackThreeJsObject;
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbstractTreeNodeDataThreeJs = void 0;
const AbstractTreeNodeData_1 = require("../AbstractTreeNodeData");
class AbstractTreeNodeDataThreeJs extends AbstractTreeNodeData_1.AbstractTreeNodeData {
    constructor() {
        super(...arguments);
        _AbstractTreeNodeDataThreeJs_threeJsObject.set(this, {});
        _AbstractTreeNodeDataThreeJs_updateCallbackThreeJsObject.set(this, null);
    }
    get threeJsObject() {
        return __classPrivateFieldGet(this, _AbstractTreeNodeDataThreeJs_threeJsObject, "f");
    }
}
exports.AbstractTreeNodeDataThreeJs = AbstractTreeNodeDataThreeJs;
_AbstractTreeNodeDataThreeJs_threeJsObject = new WeakMap(), _AbstractTreeNodeDataThreeJs_updateCallbackThreeJsObject = new WeakMap();
//# sourceMappingURL=AbstractTreeNodeDataThreeJs.js.map