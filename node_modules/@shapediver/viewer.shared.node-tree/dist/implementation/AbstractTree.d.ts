import { ITree } from '../interfaces/ITree';
import { ITreeNode } from '../interfaces/ITreeNode';
import { ITreeNodeData } from '../interfaces/ITreeNodeData';
export declare abstract class AbstractTree<T extends ITreeNode<any, ITreeNodeData<any>>> implements ITree<T> {
    #private;
    constructor(root: T);
    get root(): T;
    addNode(node: T, parent?: T, root?: T): boolean;
    addNodeAtPath(node: T, path?: string, root?: T): boolean;
    getNodeAtPath(path?: string, root?: T): T | null;
    removeNode(node: T, root?: T): boolean;
    removeNodeAtPath(path: string, root?: T): boolean;
}
//# sourceMappingURL=AbstractTree.d.ts.map