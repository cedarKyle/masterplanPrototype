"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _DirectionalLight_castShadow, _DirectionalLight_direction, _DirectionalLight_shadowMapBias, _DirectionalLight_shadowMapResolution, _DirectionalLight_threeJsObject;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DirectionalLight = void 0;
const gl_matrix_1 = require("gl-matrix");
const ILight_1 = require("../../interface/ILight");
const AbstractLight_1 = require("../AbstractLight");
class DirectionalLight extends AbstractLight_1.AbstractLight {
    // #endregion Properties (4)
    // #region Constructors (1)
    constructor(properties) {
        super({
            color: properties.color || '#ffffff',
            intensity: properties.intensity !== undefined ? properties.intensity : 1,
            type: ILight_1.LIGHT_TYPE.DIRECTIONAL,
            name: properties.name,
            order: properties.order,
            id: properties.id
        });
        // #region Properties (4)
        _DirectionalLight_castShadow.set(this, true);
        _DirectionalLight_direction.set(this, gl_matrix_1.vec3.fromValues(-1, 0, 1));
        _DirectionalLight_shadowMapBias.set(this, -0.003);
        _DirectionalLight_shadowMapResolution.set(this, 1024);
        _DirectionalLight_threeJsObject.set(this, {});
        if (properties.direction)
            __classPrivateFieldSet(this, _DirectionalLight_direction, properties.direction, "f");
        if (properties.castShadow !== undefined)
            __classPrivateFieldSet(this, _DirectionalLight_castShadow, properties.castShadow, "f");
        if (properties.shadowMapResolution)
            __classPrivateFieldSet(this, _DirectionalLight_shadowMapResolution, properties.shadowMapResolution, "f");
        if (properties.shadowMapBias)
            __classPrivateFieldSet(this, _DirectionalLight_shadowMapBias, properties.shadowMapBias, "f");
    }
    // #endregion Constructors (1)
    // #region Public Accessors (8)
    get castShadow() {
        return __classPrivateFieldGet(this, _DirectionalLight_castShadow, "f");
    }
    set castShadow(value) {
        __classPrivateFieldSet(this, _DirectionalLight_castShadow, value, "f");
        this.updateVersion();
    }
    get direction() {
        return __classPrivateFieldGet(this, _DirectionalLight_direction, "f");
    }
    set direction(value) {
        __classPrivateFieldSet(this, _DirectionalLight_direction, value, "f");
        this.updateVersion();
    }
    get shadowMapBias() {
        return __classPrivateFieldGet(this, _DirectionalLight_shadowMapBias, "f");
    }
    set shadowMapBias(value) {
        __classPrivateFieldSet(this, _DirectionalLight_shadowMapBias, value, "f");
        this.updateVersion();
    }
    get shadowMapResolution() {
        return __classPrivateFieldGet(this, _DirectionalLight_shadowMapResolution, "f");
    }
    set shadowMapResolution(value) {
        __classPrivateFieldSet(this, _DirectionalLight_shadowMapResolution, value, "f");
        this.updateVersion();
    }
    get threeJsObject() {
        return __classPrivateFieldGet(this, _DirectionalLight_threeJsObject, "f");
    }
    // #endregion Public Accessors (8)
    // #region Public Methods (1)
    clone() {
        return new DirectionalLight({
            color: this.color,
            intensity: this.intensity,
            direction: this.direction,
            castShadow: this.castShadow,
            shadowMapResolution: this.shadowMapResolution,
            shadowMapBias: this.shadowMapBias,
            name: this.name,
            order: this.order
        });
    }
}
exports.DirectionalLight = DirectionalLight;
_DirectionalLight_castShadow = new WeakMap(), _DirectionalLight_direction = new WeakMap(), _DirectionalLight_shadowMapBias = new WeakMap(), _DirectionalLight_shadowMapResolution = new WeakMap(), _DirectionalLight_threeJsObject = new WeakMap();
//# sourceMappingURL=DirectionalLight.js.map