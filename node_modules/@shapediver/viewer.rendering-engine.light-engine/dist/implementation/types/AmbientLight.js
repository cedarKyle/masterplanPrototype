"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _AmbientLight_threeJsObject;
Object.defineProperty(exports, "__esModule", { value: true });
exports.AmbientLight = void 0;
const ILight_1 = require("../../interface/ILight");
const AbstractLight_1 = require("../AbstractLight");
class AmbientLight extends AbstractLight_1.AbstractLight {
    // #endregion Properties (1)
    // #region Constructors (1)
    constructor(properties) {
        super({
            color: properties.color || '#ffffff',
            intensity: properties.intensity !== undefined ? properties.intensity : 1,
            type: ILight_1.LIGHT_TYPE.AMBIENT,
            name: properties.name,
            order: properties.order,
            id: properties.id
        });
        // #region Properties (1)
        _AmbientLight_threeJsObject.set(this, {});
    }
    // #endregion Constructors (1)
    // #region Public Accessors (1)
    get threeJsObject() {
        return __classPrivateFieldGet(this, _AmbientLight_threeJsObject, "f");
    }
    // #endregion Public Accessors (1)
    // #region Public Methods (1)
    clone() {
        return new AmbientLight({
            color: this.color || '#ffffff',
            intensity: this.intensity || 0.5,
            name: this.name,
            order: this.order
        });
    }
}
exports.AmbientLight = AmbientLight;
_AmbientLight_threeJsObject = new WeakMap();
//# sourceMappingURL=AmbientLight.js.map