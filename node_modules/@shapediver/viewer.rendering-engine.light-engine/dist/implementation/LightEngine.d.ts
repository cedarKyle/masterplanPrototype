import { SettingsEngine } from '@shapediver/viewer.shared.services';
import { LightScene } from './LightScene';
import { ILightEngine } from '../interface/ILightEngine';
import { ILightScene } from '../interface/ILightScene';
import { IRenderingEngine } from '@shapediver/viewer.rendering-engine.rendering-engine';
export declare class LightEngine implements ILightEngine {
    private readonly _renderingEngine;
    private readonly _converter;
    private readonly _lightNode;
    private readonly _tree;
    private readonly _uuidGenerator;
    private _lightScene;
    private _lightScenes;
    private _update?;
    constructor(_renderingEngine: IRenderingEngine);
    get lightScene(): LightScene | null;
    get lightScenes(): {
        [key: string]: LightScene;
    };
    get update(): (() => void) | undefined;
    set update(value: (() => void) | undefined);
    applySettings(settingsEngine: SettingsEngine): void;
    assignLightScene(id: string): boolean;
    close(): void;
    createLightScene(properties: {
        name?: string;
        standard?: boolean;
    }): ILightScene;
    removeLightScene(id: string): boolean;
    saveSettings(settingsEngine: SettingsEngine): void;
}
//# sourceMappingURL=LightEngine.d.ts.map