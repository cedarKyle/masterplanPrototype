import { ShapeDiverRequestAuthorizationGroup, ShapeDiverRequestLogMessage, ShapeDiverResponseDto } from "@shapediver/api.geometry-api-dto-v2";
import { BaseResourceApi, ShapeDiverSdkApi } from "@shapediver/sdk.geometry-api-sdk-core";
export declare class ShapeDiverSystemApi extends BaseResourceApi {
    constructor(api: ShapeDiverSdkApi);
    /**
     * Log the specified message.
     *
     * @param sessionId
     * @param body
     */
    log(sessionId: string, body: ShapeDiverRequestLogMessage): Promise<ShapeDiverResponseDto>;
    /**
     * Remove a model with all it's components.
     *
     * **WARNING: This operation cannot be undone!**
     *
     * @param modelId
     */
    pruneModel(modelId: string): Promise<ShapeDiverResponseDto>;
    /**
     * Decrypt the given ticket.
     *
     * @param ticket
     */
    decryptTicket(ticket: string): Promise<ShapeDiverResponseDto>;
    /**
     * Create a new authentication group.
     *
     * @param body
     */
    authGroup(body: ShapeDiverRequestAuthorizationGroup): Promise<ShapeDiverResponseDto>;
    /**
     * Returns system information about the Geometry Minions.
     */
    getMinionInfo(): Promise<ShapeDiverResponseDto>;
}
//# sourceMappingURL=ShapeDiverSystemApi.d.ts.map