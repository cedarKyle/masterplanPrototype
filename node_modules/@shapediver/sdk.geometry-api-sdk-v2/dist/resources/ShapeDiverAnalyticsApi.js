"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShapeDiverAnalyticsApi = void 0;
const sdk_geometry_api_sdk_core_1 = require("@shapediver/sdk.geometry-api-sdk-core");
const utils_1 = require("../utils/utils");
class ShapeDiverAnalyticsApi extends sdk_geometry_api_sdk_core_1.BaseResourceApi {
    constructor(api) {
        super(api);
    }
    /**
     * Get model session analytics.
     *
     * @param body
     */
    modelSessionStatistics(body) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () { return (yield this.api.put(this.buildAnalyticsUri() + "/session/model", body))[1]; }));
        });
    }
}
exports.ShapeDiverAnalyticsApi = ShapeDiverAnalyticsApi;
//# sourceMappingURL=ShapeDiverAnalyticsApi.js.map