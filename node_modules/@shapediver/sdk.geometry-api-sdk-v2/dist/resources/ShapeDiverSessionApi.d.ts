import { ShapeDiverRequestCustomization, ShapeDiverRequestExport, ShapeDiverRequestTicket, ShapeDiverResponseDto } from "@shapediver/api.geometry-api-dto-v2";
import { BaseResourceApi, ShapeDiverSdkApi } from "@shapediver/sdk.geometry-api-sdk-core";
export declare class ShapeDiverSessionApi extends BaseResourceApi {
    constructor(api: ShapeDiverSdkApi);
    /**
     * Create a new ticket that allows to initialize new sessions for the
     * specified model.
     *
     * @param modelId
     * @param body
     */
    ticket(modelId: string, body: ShapeDiverRequestTicket): Promise<ShapeDiverResponseDto>;
    /**
     * Create a new session for a ShapeDiver Model.
     *
     * @param ticket
     * @param request - Optional customization or export request.
     */
    init(ticket: string, request?: ShapeDiverRequestCustomization | ShapeDiverRequestExport): Promise<ShapeDiverResponseDto>;
    /**
     * Get the full description of a ShapeDiver Model.
     *
     * @param sessionId
     */
    default(sessionId: string): Promise<ShapeDiverResponseDto>;
    /**
     * Close the specified session.
     *
     * @param sessionId
     */
    close(sessionId: string): Promise<ShapeDiverResponseDto>;
}
//# sourceMappingURL=ShapeDiverSessionApi.d.ts.map