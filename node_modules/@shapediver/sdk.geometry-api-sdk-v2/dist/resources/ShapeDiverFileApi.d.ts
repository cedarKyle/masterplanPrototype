import { ShapeDiverRequestFileUpload, ShapeDiverResponseDto } from "@shapediver/api.geometry-api-dto-v2";
import { BaseResourceApi, ShapeDiverSdkApi } from "@shapediver/sdk.geometry-api-sdk-core";
export declare class ShapeDiverFileApi extends BaseResourceApi {
    constructor(api: ShapeDiverSdkApi);
    /**
     * List all file-assets of the given parameter.
     *
     * @param sessionId
     * @param paramId
     */
    list(sessionId: string, paramId: string): Promise<ShapeDiverResponseDto>;
    /**
     * Download a file-asset.
     *
     * @param sessionId
     * @param paramId
     * @param fileId
     */
    get(sessionId: string, paramId: string, fileId: string): Promise<ArrayBuffer>;
    /**
     * Delete a file-asset.
     *
     * @param sessionId
     * @param paramId
     * @param fileId
     */
    delete(sessionId: string, paramId: string, fileId: string): Promise<ShapeDiverResponseDto>;
    /**
     * Request an Upload-URL for a file.
     *
     * @param sessionId
     * @param body
     */
    requestUpload(sessionId: string, body: ShapeDiverRequestFileUpload): Promise<ShapeDiverResponseDto>;
}
//# sourceMappingURL=ShapeDiverFileApi.d.ts.map