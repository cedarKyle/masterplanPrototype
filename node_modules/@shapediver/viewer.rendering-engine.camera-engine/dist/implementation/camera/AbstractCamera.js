"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _AbstractCamera_active, _AbstractCamera_autoAdjust, _AbstractCamera_cameraMovementDuration, _AbstractCamera_defaultPosition, _AbstractCamera_defaultTarget, _AbstractCamera_enableCameraControls, _AbstractCamera_far, _AbstractCamera_name, _AbstractCamera_near, _AbstractCamera_node, _AbstractCamera_useNodeData, _AbstractCamera_order, _AbstractCamera_revertAtMouseUp, _AbstractCamera_revertAtMouseUpDuration, _AbstractCamera_zoomExtentsFactor;
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbstractCamera = void 0;
const detectIt = __importStar(require("detect-it"));
const gl_matrix_1 = require("gl-matrix");
const viewer_shared_services_1 = require("@shapediver/viewer.shared.services");
const tsyringe_1 = require("tsyringe");
const viewer_shared_math_1 = require("@shapediver/viewer.shared.math");
const viewer_shared_node_tree_1 = require("@shapediver/viewer.shared.node-tree");
class AbstractCamera extends viewer_shared_node_tree_1.AbstractTreeNodeData {
    // #endregion Properties (23)
    // #region Constructors (1)
    constructor(_id, _type) {
        super(_id);
        this._id = _id;
        this._type = _type;
        // #region Properties (23)
        _AbstractCamera_active.set(this, false);
        _AbstractCamera_autoAdjust.set(this, false);
        _AbstractCamera_cameraMovementDuration.set(this, 800);
        _AbstractCamera_defaultPosition.set(this, gl_matrix_1.vec3.create());
        _AbstractCamera_defaultTarget.set(this, gl_matrix_1.vec3.create());
        _AbstractCamera_enableCameraControls.set(this, true);
        _AbstractCamera_far.set(this, 1000);
        _AbstractCamera_name.set(this, void 0);
        _AbstractCamera_near.set(this, 1);
        _AbstractCamera_node.set(this, void 0);
        _AbstractCamera_useNodeData.set(this, false);
        _AbstractCamera_order.set(this, void 0);
        _AbstractCamera_revertAtMouseUp.set(this, false);
        _AbstractCamera_revertAtMouseUpDuration.set(this, 800);
        _AbstractCamera_zoomExtentsFactor.set(this, 1);
        this._eventEngine = tsyringe_1.container.resolve(viewer_shared_services_1.EventEngine);
        this._stateEngine = tsyringe_1.container.resolve(viewer_shared_services_1.StateEngine);
        this._boundingBox = new viewer_shared_math_1.Box();
        this._position = gl_matrix_1.vec3.create();
        this._target = gl_matrix_1.vec3.create();
    }
    // #endregion Constructors (1)
    // #region Public Accessors (39)
    get active() {
        return __classPrivateFieldGet(this, _AbstractCamera_active, "f");
    }
    set active(value) {
        __classPrivateFieldSet(this, _AbstractCamera_active, value, "f");
    }
    get autoAdjust() {
        return __classPrivateFieldGet(this, _AbstractCamera_autoAdjust, "f");
    }
    set autoAdjust(value) {
        __classPrivateFieldSet(this, _AbstractCamera_autoAdjust, value, "f");
    }
    set boundingBox(value) {
        this._boundingBox = value;
    }
    get cameraMovementDuration() {
        return __classPrivateFieldGet(this, _AbstractCamera_cameraMovementDuration, "f");
    }
    set cameraMovementDuration(value) {
        __classPrivateFieldSet(this, _AbstractCamera_cameraMovementDuration, value, "f");
    }
    get controls() {
        return this._controls;
    }
    get defaultPosition() {
        return __classPrivateFieldGet(this, _AbstractCamera_defaultPosition, "f");
    }
    set defaultPosition(value) {
        __classPrivateFieldSet(this, _AbstractCamera_defaultPosition, value, "f");
    }
    get defaultTarget() {
        return __classPrivateFieldGet(this, _AbstractCamera_defaultTarget, "f");
    }
    set defaultTarget(value) {
        __classPrivateFieldSet(this, _AbstractCamera_defaultTarget, value, "f");
    }
    get enableCameraControls() {
        return __classPrivateFieldGet(this, _AbstractCamera_enableCameraControls, "f");
    }
    set enableCameraControls(value) {
        __classPrivateFieldSet(this, _AbstractCamera_enableCameraControls, value, "f");
    }
    get far() {
        return __classPrivateFieldGet(this, _AbstractCamera_far, "f");
    }
    set far(value) {
        __classPrivateFieldSet(this, _AbstractCamera_far, value, "f");
    }
    get id() {
        return this._id;
    }
    get name() {
        return __classPrivateFieldGet(this, _AbstractCamera_name, "f");
    }
    set name(value) {
        __classPrivateFieldSet(this, _AbstractCamera_name, value, "f");
    }
    get near() {
        return __classPrivateFieldGet(this, _AbstractCamera_near, "f");
    }
    set near(value) {
        __classPrivateFieldSet(this, _AbstractCamera_near, value, "f");
    }
    get node() {
        return __classPrivateFieldGet(this, _AbstractCamera_node, "f");
    }
    set node(value) {
        __classPrivateFieldSet(this, _AbstractCamera_node, value, "f");
    }
    get useNodeData() {
        return __classPrivateFieldGet(this, _AbstractCamera_useNodeData, "f");
    }
    set useNodeData(value) {
        __classPrivateFieldSet(this, _AbstractCamera_useNodeData, value, "f");
    }
    get order() {
        return __classPrivateFieldGet(this, _AbstractCamera_order, "f");
    }
    set order(value) {
        __classPrivateFieldSet(this, _AbstractCamera_order, value, "f");
    }
    get position() {
        return this._position;
    }
    set position(value) {
        this._position = value;
        this._controls.position = value;
    }
    get revertAtMouseUp() {
        return __classPrivateFieldGet(this, _AbstractCamera_revertAtMouseUp, "f");
    }
    set revertAtMouseUp(value) {
        __classPrivateFieldSet(this, _AbstractCamera_revertAtMouseUp, value, "f");
    }
    get revertAtMouseUpDuration() {
        return __classPrivateFieldGet(this, _AbstractCamera_revertAtMouseUpDuration, "f");
    }
    set revertAtMouseUpDuration(value) {
        __classPrivateFieldSet(this, _AbstractCamera_revertAtMouseUpDuration, value, "f");
    }
    get target() {
        return this._target;
    }
    set target(value) {
        this._target = value;
        this._controls.target = value;
    }
    get type() {
        return this._type;
    }
    get viewportId() {
        return this._viewportId;
    }
    get zoomExtentsFactor() {
        return __classPrivateFieldGet(this, _AbstractCamera_zoomExtentsFactor, "f");
    }
    set zoomExtentsFactor(value) {
        __classPrivateFieldSet(this, _AbstractCamera_zoomExtentsFactor, value, "f");
    }
    // #endregion Public Accessors (39)
    // #region Public Methods (5)
    animate(path, options) {
        return __awaiter(this, void 0, void 0, function* () {
            if (path.length === 0)
                return Promise.resolve(false);
            if (!options)
                options = {};
            options.duration = options.duration >= 0 ? options.duration : this.cameraMovementDuration;
            const res = yield this._controls.animate(path, options);
            if (res) {
                this._position = this._controls.position;
                this._target = this._controls.target;
            }
            return res;
        });
    }
    reset(options) {
        if ((this.defaultPosition[0] === 0 && this.defaultPosition[1] === 0 && this.defaultPosition[2] === 0) && (this.defaultTarget[0] === 0 && this.defaultTarget[1] === 0 && this.defaultTarget[2] === 0)) {
            return this.zoomTo(undefined, options);
        }
        else {
            return this.set(gl_matrix_1.vec3.clone(this.defaultPosition), gl_matrix_1.vec3.clone(this.defaultTarget), options);
        }
    }
    set(position, target, options) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!options)
                options = {};
            options.duration = options.duration >= 0 ? options.duration : this.cameraMovementDuration;
            const res = yield this._controls.animate([
                { position: gl_matrix_1.vec3.clone(this.position), target: gl_matrix_1.vec3.clone(this.target) },
                { position, target }
            ], options);
            if (res) {
                this._position = this._controls.position;
                this._target = this._controls.target;
            }
            return res;
        });
    }
    update(time) {
        if (this.useNodeData && this.node && this._viewportId) {
            return true;
        }
        else {
            const { position, target } = this._controls.update(time);
            let changed = true;
            if (gl_matrix_1.vec3.equals(position, this.position) && gl_matrix_1.vec3.equals(target, this.target))
                changed = false;
            this.position = gl_matrix_1.vec3.clone(position);
            this.target = gl_matrix_1.vec3.clone(target);
            return changed;
        }
    }
    zoomTo(zoomTarget, options) {
        const { position, target } = this.calculateZoomTo(zoomTarget);
        return this.set(position, target, options);
    }
    // #endregion Public Abstract Methods (5)
    // #region Protected Methods (1)
    assignViewerInternal(viewportId, canvas) {
        this._viewportId = viewportId;
        this._eventEngine.addListener(viewer_shared_services_1.EVENTTYPE.SESSION.SESSION_CUSTOMIZED, (e) => {
            if (__classPrivateFieldGet(this, _AbstractCamera_autoAdjust, "f") === true)
                this.zoomTo();
        });
        const revert = () => {
            if (__classPrivateFieldGet(this, _AbstractCamera_revertAtMouseUp, "f") === true)
                this.reset({ duration: __classPrivateFieldGet(this, _AbstractCamera_revertAtMouseUpDuration, "f") });
        };
        canvas.addEventListener("mouseup", () => revert(), detectIt.supportsPassiveEvents ? { capture: false, passive: true } : false);
        canvas.addEventListener("mouseout", () => revert(), detectIt.supportsPassiveEvents ? { capture: false, passive: true } : false);
        canvas.addEventListener("touchend", () => revert(), detectIt.supportsPassiveEvents ? { capture: false, passive: true } : false);
        let zoomResizeTimeout;
        let mouseWheelEvent = /Firefox/i.test(navigator.userAgent) ? "DOMMouseScroll" : "mousewheel"; //FF doesn't recognize mousewheel as of FF3.x
        canvas.addEventListener(mouseWheelEvent, () => {
            clearTimeout(zoomResizeTimeout);
            zoomResizeTimeout = setTimeout(revert, 300);
        }, detectIt.supportsPassiveEvents ? { capture: false, passive: true } : false);
    }
}
exports.AbstractCamera = AbstractCamera;
_AbstractCamera_active = new WeakMap(), _AbstractCamera_autoAdjust = new WeakMap(), _AbstractCamera_cameraMovementDuration = new WeakMap(), _AbstractCamera_defaultPosition = new WeakMap(), _AbstractCamera_defaultTarget = new WeakMap(), _AbstractCamera_enableCameraControls = new WeakMap(), _AbstractCamera_far = new WeakMap(), _AbstractCamera_name = new WeakMap(), _AbstractCamera_near = new WeakMap(), _AbstractCamera_node = new WeakMap(), _AbstractCamera_useNodeData = new WeakMap(), _AbstractCamera_order = new WeakMap(), _AbstractCamera_revertAtMouseUp = new WeakMap(), _AbstractCamera_revertAtMouseUpDuration = new WeakMap(), _AbstractCamera_zoomExtentsFactor = new WeakMap();
//# sourceMappingURL=AbstractCamera.js.map