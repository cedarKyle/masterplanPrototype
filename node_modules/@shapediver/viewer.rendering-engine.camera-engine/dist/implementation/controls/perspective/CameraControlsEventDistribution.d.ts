import { CameraControlsLogic } from './CameraControlsLogic';
import { ICameraControlsEventDistribution } from '../../../interfaces/controls/ICameraControlsEventDistribution';
import { PerspectiveCameraControls } from '../PerspectiveCameraControls';
export declare class CameraControlsEventDistribution implements ICameraControlsEventDistribution {
    private readonly _controls;
    private readonly _cameraLogic;
    private _active;
    private _activeEvents;
    constructor(_controls: PerspectiveCameraControls, _cameraLogic: CameraControlsLogic);
    activateCameraEvents(): void;
    deactivateCameraEvents(): void;
    onDown(event: MouseEvent | TouchEvent): void;
    onKey(event: KeyboardEvent): void;
    onKeyDown(event: KeyboardEvent): void;
    onMouseDown(event: MouseEvent): void;
    onMouseMove(event: MouseEvent): void;
    onMouseEnd(event: MouseEvent): void;
    onMouseWheel(event: WheelEvent): void;
    onMouseUp(event: WheelEvent): void;
    onMouseOut(event: WheelEvent): void;
    onMove(event: MouseEvent | TouchEvent): void;
    onTouchEnd(event: TouchEvent): void;
    onTouchMove(event: TouchEvent): void;
    onTouchStart(event: TouchEvent): void;
    onTouchCancel(event: TouchEvent): void;
    onTouchUp(event: TouchEvent): void;
    onUp(event: MouseEvent | TouchEvent): void;
    onWheel(event: WheelEvent): void;
    reset(): void;
    private convertInput;
}
//# sourceMappingURL=CameraControlsEventDistribution.d.ts.map