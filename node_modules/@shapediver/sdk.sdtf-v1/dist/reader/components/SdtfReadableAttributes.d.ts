import { ISdtfReadableAccessor, ISdtfReadableAttribute, ISdtfReadableAttributes, ISdtfReadableContentComponent, ISdtfReadableTypeHint } from "@shapediver/sdk.sdtf-core";
import { ISdtfDataParser } from "../ISdtfDataParser";
import { SdtfBaseReadableComponent } from "./SdtfBaseReadableComponent";
export declare class SdtfReadableAttributes extends SdtfBaseReadableComponent implements ISdtfReadableAttributes {
    entries: Record<string, ISdtfReadableAttribute>;
    /** @override */
    toDataObject(): Record<string, unknown>;
}
export declare class SdtfReadableAttribute implements ISdtfReadableAttribute, ISdtfReadableContentComponent {
    private readonly dataParser;
    accessor?: ISdtfReadableAccessor;
    typeHint?: ISdtfReadableTypeHint;
    value?: unknown;
    constructor(dataParser: ISdtfDataParser);
    toDataObject(): Record<string, unknown>;
    getContent(): Promise<unknown>;
}
//# sourceMappingURL=SdtfReadableAttributes.d.ts.map