"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SdtfReadableAttribute = exports.SdtfReadableAttributes = void 0;
const SdtfUtils_1 = require("../../utils/SdtfUtils");
const SdtfBaseReadableComponent_1 = require("./SdtfBaseReadableComponent");
class SdtfReadableAttributes extends SdtfBaseReadableComponent_1.SdtfBaseReadableComponent {
    constructor() {
        super(...arguments);
        this.entries = {};
    }
    /** @override */
    toDataObject() {
        const dataObject = {};
        Object.entries(this.entries).forEach(([k, a]) => dataObject[k] = a.toDataObject());
        return dataObject;
    }
}
exports.SdtfReadableAttributes = SdtfReadableAttributes;
class SdtfReadableAttribute {
    constructor(dataParser) {
        this.dataParser = dataParser;
    }
    toDataObject() {
        const dataObject = (0, SdtfUtils_1.userComponentToDataObject)(this);
        delete dataObject.dataParser;
        return dataObject;
    }
    getContent() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.dataParser.parseContent(this);
        });
    }
}
exports.SdtfReadableAttribute = SdtfReadableAttribute;
//# sourceMappingURL=SdtfReadableAttributes.js.map