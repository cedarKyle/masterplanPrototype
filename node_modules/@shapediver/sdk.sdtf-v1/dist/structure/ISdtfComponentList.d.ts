import { ISdtfAccessor, ISdtfAsset, ISdtfAttributes, ISdtfBuffer, ISdtfBufferView, ISdtfChunk, ISdtfDataItem, ISdtfFileInfo, ISdtfNode, ISdtfTypeHint } from "@shapediver/sdk.sdtf-core";
/** Holds all component instances that represent a single sdTF file. */
export interface ISdtfComponentList {
    accessors: ISdtfAccessor[];
    asset: ISdtfAsset;
    attributes: ISdtfAttributes[];
    buffers: ISdtfBuffer[];
    bufferViews: ISdtfBufferView[];
    chunks: ISdtfChunk[];
    items: ISdtfDataItem[];
    nodes: ISdtfNode[];
    typeHints: ISdtfTypeHint[];
    fileInfo: ISdtfFileInfo;
    binaryBody?: ArrayBuffer;
}
/**
 * Holds all component instances that represent a single sdTF file.
 * These components are partial representations and must be validated to ensure data correctness.
 */
export interface ISdtfPartialComponentList {
    accessors: Partial<ISdtfAccessor>[];
    asset: Partial<ISdtfAsset>;
    attributes: Partial<ISdtfAttributes>[];
    buffers: Partial<ISdtfBuffer>[];
    bufferViews: Partial<ISdtfBufferView>[];
    chunks: Partial<ISdtfChunk>[];
    items: Partial<ISdtfDataItem>[];
    nodes: Partial<ISdtfNode>[];
    typeHints: Partial<ISdtfTypeHint>[];
    fileInfo: Partial<ISdtfFileInfo>;
    binaryBody?: ArrayBuffer;
}
/** Creates a sdTF JSON content object from the given component list. */
export declare function toJsonContent(componentList: ISdtfComponentList): Record<string, unknown>;
//# sourceMappingURL=ISdtfComponentList.d.ts.map