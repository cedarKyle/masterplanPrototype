import { ISdtfReadableComponentList } from "../reader/ISdtfReadableComponentList";
import { ISdtfWriteableComponentList } from "../writer/ISdtfWriteableComponentList";
import { ISdtfComponentList, ISdtfPartialComponentList } from "./ISdtfComponentList";
export declare class SdtfComponentFactoryWrapper implements SdtfComponentFactoryWrapper {
    private readonly factory;
    constructor();
    createFromJson(json: Record<string, unknown>): ISdtfComponentList;
    createFromReadable(readableComponents: ISdtfReadableComponentList): ISdtfComponentList;
    createFromWriteable(writeableComponents: ISdtfWriteableComponentList): ISdtfComponentList;
    /**
     * Validates every partial-component and returns a corresponding component list.
     * @private
     * @throws {@link SdtfError} when a partial-component is invalid.
     */
    createComponentList(partialComponents: ISdtfPartialComponentList): ISdtfComponentList;
    /**
     * Validation wrapper around the given create function for a content object of the specified name.
     * @private
     * @throws {@link SdtfError} when something goes wrong.
     */
    buildFromObject<T>(jsonObject: Record<string, unknown>, propertyName: string, createFn: (data: Record<string, unknown>) => T): T;
    /**
     * Validation wrapper around the given create function for a content array of the specified name.
     * @private
     * @throws {@link SdtfError} when something goes wrong.
     */
    buildFromArray<T>(jsonArray: Record<string, unknown>, propertyName: string, createFn: (data: Record<string, unknown>) => T): T[];
    /**
     * Readable and writeable components use object references to represent the hierarchy.
     * However, sdTF components use reference IDs for this.
     * This method maps the object representation into a reference ID representation.
     * @private
     */
    mapHierarchyRepresentation(target: ISdtfPartialComponentList, src: ISdtfWriteableComponentList | ISdtfReadableComponentList): void;
}
//# sourceMappingURL=SdtfComponentFactoryWrapper.d.ts.map