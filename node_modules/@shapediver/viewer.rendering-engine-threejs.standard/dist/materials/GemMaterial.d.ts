import * as THREE from 'three';
export interface GemMaterialParameters extends THREE.MeshPhysicalMaterialParameters {
    refractionIndex?: number | undefined;
    impurityMap?: THREE.Texture | null | undefined;
    impurityScale?: number | undefined;
    colorTransferBegin?: THREE.Color | undefined;
    colorTransferEnd?: THREE.Color | undefined;
    center?: THREE.Vector3 | undefined;
    radius?: number | undefined;
    sphericalNormalMap?: THREE.CubeTexture | null | undefined;
    gamma?: number | undefined;
    contrast?: number | undefined;
    brightness?: number | undefined;
    dispersion?: number | undefined;
    tracingDepth?: number | undefined;
    tracingOpacity?: number | undefined;
    inverseModelMatrix?: THREE.Matrix4 | undefined;
    inverseTransposeModelMatrix?: THREE.Matrix3 | undefined;
}
export declare class GemMaterial extends THREE.MeshPhysicalMaterial {
    isGemMaterial: boolean;
    refractionIndex: number;
    impurityMap: THREE.Texture | null;
    impurityScale: number;
    colorTransferBegin: THREE.Color;
    colorTransferEnd: THREE.Color;
    center: THREE.Vector3;
    tracingDepth: number;
    radius: number;
    sphericalNormalMap: THREE.CubeTexture | null;
    gamma: number;
    contrast: number;
    brightness: number;
    dispersion: number;
    tracingOpacity: number;
    inverseModelMatrix: THREE.Matrix4;
    inverseTransposeModelMatrix: THREE.Matrix3;
    constructor(params: GemMaterialParameters);
    copy(source: GemMaterial): this;
}
//# sourceMappingURL=GemMaterial.d.ts.map