"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SDBone_SDid, _SDBone_SDversion;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDBone = void 0;
const THREE = __importStar(require("three"));
class SDBone extends THREE.Bone {
    constructor(SDid, SDversion) {
        super();
        // #region Constructors (1)
        _SDBone_SDid.set(this, void 0);
        _SDBone_SDversion.set(this, void 0);
        __classPrivateFieldSet(this, _SDBone_SDid, SDid, "f");
        __classPrivateFieldSet(this, _SDBone_SDversion, SDversion, "f");
    }
    applyTransformation(transformation) {
        this.matrix.identity();
        this.matrixWorld.identity();
        this.position.set(0, 0, 0);
        this.scale.set(1, 1, 1);
        this.quaternion.set(0, 0, 0, 1);
        this.applyMatrix4(new THREE.Matrix4().fromArray(transformation));
    }
    // #endregion Constructors (1)
    // #region Public Accessors (4)
    get SDid() {
        return __classPrivateFieldGet(this, _SDBone_SDid, "f");
    }
    set SDid(value) {
        __classPrivateFieldSet(this, _SDBone_SDid, value, "f");
    }
    get SDversion() {
        return __classPrivateFieldGet(this, _SDBone_SDversion, "f");
    }
    set SDversion(value) {
        __classPrivateFieldSet(this, _SDBone_SDversion, value, "f");
    }
}
exports.SDBone = SDBone;
_SDBone_SDid = new WeakMap(), _SDBone_SDversion = new WeakMap();
//# sourceMappingURL=SDBone.js.map