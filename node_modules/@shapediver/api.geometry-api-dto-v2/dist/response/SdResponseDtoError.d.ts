/**
 * @swagger {components.schemas} ResponseError {
     "description": "Body of an error object.",
     "type": "object"
    }
 */
/** Body of an error object. */
export interface ShapeDiverResponseError {
    /**
     * @swagger {components.schemas.ResponseError.properties} error {
         "description": "The type of the error.",
         "$ref": "#/components/schemas/ResponseErrorType"
       }
     * @swagger {components.schemas.ResponseError} required [ "error" ]
     */
    /** The type of the error. */
    error: ShapeDiverResponseErrorType;
    /**
     * @swagger {components.schemas.ResponseError.properties} desc {
         "description": "General description of the error type.",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseError} required [ "desc" ]
     */
    /** General description of the error type. */
    desc: string;
    /**
     * @swagger {components.schemas.ResponseError.properties} message {
         "description": "Detailed error description.",
         "type": "string"
       }
     */
    /** Detailed error description. */
    message?: string;
}
/**
 * @swagger {components.schemas} ResponseErrorType {
     "description": "Possible error types.",
     "type": "string",
     "enum": [ "''", "SdAssertionError", "SdCacheErrorGeneric", "SdConnectorError", "SdDatabaseErrorFilterInvalid", "SdDatabaseErrorGeneric", "SdDatabaseErrorSelectorInvalid", "SdDatabaseErrorSelectorNotUnique", "SdEmailingError", "SdErrorEntityNotFound", "SdErrorForbidden", "SdErrorGenericClient", "SdErrorGenericInternal", "SdErrorUnauthorized", "SdIllegalArgumentError", "SdJwtValidationError", "SdModelValidationError", "SdNotAcceptable", "SdNotFoundError", "SdParameterValidationError", "SdRateLimitErrorGeneric", "SdRequestTimeout", "SdRequestValidationError", "SdResourceGoneError", "SdSessionGoneError", "SdSessionValidationError", "SdStorageErrorGeneric", "SdTextureUrlError", "SdTicketValidationError", "SdTokenMissingError", "SdTransformContentArrayError", "SdUnconfirmedModelError" ]
   }
 */
/** Possible error types. */
export declare enum ShapeDiverResponseErrorType {
    ASSERTION_ERROR = "SdAssertionError",
    CACHE_ERROR_GENERIC = "SdCacheErrorGeneric",
    CONNECTOR_ERROR = "SdConnectorError",
    DATABASE_ERROR_FILTER_INVALID = "SdDatabaseErrorFilterInvalid",
    DATABASE_ERROR_GENERIC = "SdDatabaseErrorGeneric",
    DATABASE_ERROR_SELECTOR_INVALID = "SdDatabaseErrorSelectorInvalid",
    DATABASE_ERROR_SELECTOR_NOT_UNIQUE = "SdDatabaseErrorSelectorNotUnique",
    EMAILING_ERROR = "SdEmailingError",
    ERROR_ENTITY_NOT_FOUND = "SdErrorEntityNotFound",
    ERROR_FORBIDDEN = "SdErrorForbidden",
    ERROR_GENERIC_CLIENT = "SdErrorGenericClient",
    ERROR_GENERIC_INTERNAL = "SdErrorGenericInternal",
    ERROR_UNAUTHORIZED = "SdErrorUnauthorized",
    ILLEGAL_ARGUMENT_ERROR = "SdIllegalArgumentError",
    JWT_VALIDATION_ERROR = "SdJwtValidationError",
    MODEL_VALIDATION_ERROR = "SdModelValidationError",
    NOT_ACCEPTABLE = "SdNotAcceptable",
    NOT_FOUND_ERROR = "SdNotFoundError",
    PARAMETER_VALIDATION_ERROR = "SdParameterValidationError",
    RATE_LIMIT_ERROR_GENERIC = "SdRateLimitErrorGeneric",
    REQUEST_TIMEOUT = "SdRequestTimeout",
    REQUEST_VALIDATION_ERROR = "SdRequestValidationError",
    RESOURCE_GONE_ERROR = "SdResourceGoneError",
    SESSION_GONE_ERROR = "SdSessionGoneError",
    SESSION_VALIDATION_ERROR = "SdSessionValidationError",
    STORAGE_ERROR_GENERIC = "SdStorageErrorGeneric",
    TEXTURE_URL_ERROR = "SdTextureUrlError",
    TICKET_VALIDATION_ERROR = "SdTicketValidationError",
    TOKEN_MISSING_ERROR = "SdTokenMissingError",
    TRANSFORM_CONTENT_ARRAY_ERROR = "SdTransformContentArrayError",
    UNCONFIRMED_MODEL_ERROR = "SdUnconfirmedModelError",
    UNKNOWN = ""
}
//# sourceMappingURL=SdResponseDtoError.d.ts.map